{"version":3,"sources":["BSP_PB.png","css/classes.js","components/loggedout/Login.js","components/loggedout/Register.js","components/loggedin/NavBar.js","components/FilterFunction.js","components/ChatMessage.js","components/GroupInfoJoinedPreview.js","components/GroupCreate.js","constants/exampledata.js","components/Chat.js","components/StudyProjectPreview.js","constants/constants.js","components/GroupInfoJoined.js","components/StudyProjectCreate.js","components/StudyProjectInfo.js","components/Profile.js","components/loggedin/calendar/Calendar.js","components/GroupInfoPreview.js","components/GroupInfo.js","components/GroupJoinRequest.js","components/loggedin/LoggedIn.js","components/Title.js","components/Website.js","components/AdminPanel.js","components/MyRouter.js","index.js"],"names":["module","exports","LOGINCLASSES","GROUPCREATE","STUDYPROJECTCREATE","NAVBAR","Login","props","useState","username","setUsername","password","setPassword","loginText","setLoginText","className","onClick","setShow","placeholder","onChange","e","target","value","type","login","Register","email","setEmail","passwordRepeat","setPasswordRepeat","registerText","setRegisterText","text","console","assert","register","registerButton","Navbar","navBarClick","logOutClick","FilterFunction","setFilterOption","key","setFilterSettings","filterSettings","inputField","ChatMessage","positioningCss","messageByMe","messageAuthor","data","name","displayAsRowCss","displayAsRow","Date","time","toLocaleTimeString","GroupInfoJoinedPreview","groupinfo","icon","title","lastchatmessage","GroupCreate","groupname","fieldofstudy","modulestext","groupdescription","memberslimit","newGroupData","setNewGroupData","changeField","id","style","minHeight","min","max","createNewGroup","setHomeDisplay","undefined","exampleJoinedGroups","createdBy","createdDate","moment","valueOf","modules","memberCount","memberLimit","members","description","now","exampleGroupData","subjects","studyprojects","chat","exampleStudyProjects","projectname","projectdescription","weeklymeetday","weekday","weeklymeetstarttime","weeklymeetendtime","deadline","add","exampleProfileInfo","degreecourse","semester","connections","moduls","hobbies","exampleJoinGroupData","exampleChatMessages","cloneDeep","require","Chat","chatMessages","setChatMessages","newMessageText","setNewMessageText","messagesAsHtml","map","chatInput","displayChatInput","message","messagesCopy","push","addChatMessage","StudyProjectPreview","projectData","fromNow","WEEKDAYS","defaultFilter","freeslots","applyGroupFilter","group","toLowerCase","includes","freeSlots","parseInt","ICONS","GEAR","GroupInfoJoined","studyProjects","groupData","setHomeStudyProjectDisplay","StudyProjectCreate","timestamp","newStudyProjectData","setNewStudyProjectData","convertTimeToTimestamp","convertTimestampToTime","format","index","date","createNewStudyProject","groupid","StudyProjectInfo","projectInfo","meetDay","meetStartTime","meetEndTime","meetDayAndTime","deadlineFromNow","deadlineReadable","Profile","profileInfo","mycss","src","profilePic","alt","Calendar","weekOffset","setWeekOffset","exampleData","color","meetingDay","meetingTime","startdate","weekTitles","startOfWeek","getFullYear","getMonth","getDate","getDay","i","length","meeting","meetingTimeThisWeek","getHours","getMinutes","getTime","displayString","timeStyle","displayHtml","JSXcontent","startOfYear","firstMondayOfYear","calendarWeek","Math","round","monthOfCalendarWeek","toLocaleString","month","yearOfCalendarWeek","weekview","week","toString","htmlElement","GroupInfoPreview","GroupInfo","setGroupSearchViewGroup","toLocaleDateString","join","setGroupSearchRequestJoin","GroupJoinRequest","LoggedIn","display","setDisplay","homeDisplay","homeGroupDisplay","setHomeGroupDisplay","groupSearchViewGroup","groupSearchRequestJoin","buttonName","groups","subPage","log","studyProjectData","filter","Title","Website","setLoggedIn","show","subpage","AdminPanel","to","MyRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd2f06f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BSP_PB.3f4c7336.png\";","export let LOGINCLASSES = {\n    // Login and registration\n    background:\n        \"flex flex-col self-center bg-gray-200 p-2 border-4 border-black rounded\",\n    row: \"flex flex-row w-128 items-center\",\n    headbar: \"flex flex-row justify-evenly my-4\",\n    highlightedBox: \"bg-gray-500 flex-grow rounded\",\n    notHighlightedBox: \"hover:bg-yellow-400 flex-grow rounded\",\n    label: \"w-32 m-2\",\n    inputBox: \"w-32 border-2 border-black rounded m-2\",\n    button: \"my-4 mx-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n}\n\nexport let GROUPCREATE = {\n    background:\n        \"flex flex-col bg-gray-200 m-2 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto  grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2 flex-grow\",\n    inputBox: \"m-2 border-2 border-black rounded flex-grow\",\n    textArea: \"m-2 border-2 border-black rounded flex-grow\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let STUDYPROJECTCREATE = {\n    background: \"flex flex-col bg-gray-200 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    // TODO Left align? right align?\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2\",\n    inputBox: \"m-2 border-2 border-black rounded\",\n    textArea: \"h-min-64 m-2 border-2 border-black rounded\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let NAVBAR = {\n    total: \"flex flex-row justify-between bg-gray-200 w-128\",\n    leftSide: \"flex flex-row bg-blue-100\",\n    rightSide: \"flex flex-row\",\n    button: \"px-4 py-2 mx-2 my-1 font-black\",\n}\n","import React, { useState } from \"react\"\n\nimport { LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Login(props) {\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [loginText, setLoginText] = useState(\"\")\n\n    let loginButton = () => {\n        setLoginText(\n            `You have clicked the 'login' button! No functionality is implemented yet :(`\n        )\n        props.login(username, password)\n    }\n\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button className={LOGINCLASSES.highlightedBox}>Login</button>\n                <button\n                    className={LOGINCLASSES.notHighlightedBox}\n                    onClick={() => props.setShow(\"register\")}\n                >\n                    Register\n                </button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={LOGINCLASSES.button}\n                onClick={() => {\n                    loginButton()\n                }}\n            >\n                Login\n            </button>\n            <div>{loginText}</div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\n\nimport { LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Register(props) {\n    let [username, setUsername] = useState(\"\")\n    let [email, setEmail] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [passwordRepeat, setPasswordRepeat] = useState(\"\")\n    let [registerText, setRegisterText] = useState(\"\")\n\n    let registerButton = () => {\n        let text = \"\"\n        if (email !== \"\") {\n            text = `Your account '${username}' has been created. An verification email to '${email}' has been sent! You may log in now.`\n        } else {\n            text =\n                \"You left the email field empty! Account could not be created.\"\n        }\n\n        setRegisterText(text)\n\n        console.assert(\n            password === passwordRepeat,\n            \"Password and password repeat are not the same!\"\n        )\n\n        props.register(username, email, password)\n    }\n\n    // TODO verify if username already in use\n    // TODO verify if email is already in use\n    // TODO when successfully registered, add text at bottom 'new user has been registered'\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button\n                    className={LOGINCLASSES.notHighlightedBox}\n                    onClick={() => props.setShow(\"login\")}\n                >\n                    Login\n                </button>\n                <button className={LOGINCLASSES.highlightedBox}>\n                    Register\n                </button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Email</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    onChange={(e) => {\n                        setEmail(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Repeat Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Repeat password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPasswordRepeat(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={LOGINCLASSES.button}\n                onClick={() => registerButton()}\n            >\n                Register\n            </button>\n            <div>{registerText}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { NAVBAR } from \"../../css/classes\"\n\nexport default function Navbar(props) {\n    // TODO Underline text to let user know where he currently is\n    return (\n        <div className={NAVBAR.total}>\n            <div className={NAVBAR.leftSide}>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.navBarClick(\"home\")\n                    }}\n                >\n                    Home\n                </button>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.navBarClick(\"groupsearch\")\n                    }}\n                >\n                    Gruppensuche\n                </button>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.navBarClick(\"chat\")\n                    }}\n                >\n                    Chat\n                </button>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.navBarClick(\"calendar\")\n                    }}\n                >\n                    Kalender\n                </button>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.navBarClick(\"profile\")\n                    }}\n                >\n                    Profil\n                </button>\n            </div>\n            <div className={NAVBAR.rightSide}>\n                <button\n                    className={NAVBAR.button}\n                    onClick={() => {\n                        props.logOutClick()\n                    }}\n                >\n                    Logout\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function FilterFunction(props) {\n    /*\n\n    */\n\n    let setFilterOption = (key, value) => {\n        props.setFilterSettings({ ...props.filterSettings, [key]: value })\n    }\n\n    let inputField = (key, placeholder = \"\", type = \"txt\") => {\n        return (\n            <input\n                className={\"border-2 border-black p-1 m-1\"}\n                type={type}\n                placeholder={placeholder}\n                value={props.filterSettings[key]}\n                onChange={(e) => setFilterOption(key, e.target.value)}\n            />\n        )\n    }\n\n    return (\n        <div className={\"flex flex-col border-2 border-black m-1 p-1\"}>\n            <div className={\"p-1 m-1\"}>Filterfunktion</div>\n            {inputField(\"groupname\", \"Gruppenname\")}\n            {inputField(\"fieldofstudy\", \"Studiengang\")}\n            {inputField(\"modulestext\", \"Modul\")}\n            {inputField(\"freeslots\", \"Freie Plätze\", \"number\")}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function ChatMessage(props) {\n    /*\n    props: {\n        displayAsRow: false,\n        messageByMe: true,\n        data: {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n        }\n    }\n     */\n    let positioningCss = props.messageByMe ? \"self-end\" : \"self-start\"\n    let messageAuthor = props.messageByMe ? \"mir\" : props.data.name\n    let displayAsRowCss = props.displayAsRow ? \"flex flex-row\" : \"flex flex-col\"\n    return (\n        <div className={displayAsRowCss}>\n            <div className={`${positioningCss} font-black mx-1`}>\n                {props.data.text}\n            </div>\n            {/*TODO Check if time lies in the past, if yes: add date*/}\n            <div\n                className={`${positioningCss} font-light mx-1`}\n            >{`von ${messageAuthor} um ${new Date(\n                props.data.time\n            ).toLocaleTimeString(\"de\")} Uhr`}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport ChatMessage from \"./ChatMessage\"\n\nexport default function GroupInfoJoinedPreview(props) {\n    // This component is displayed under \"home\" screen\n\n    /*\n    props:\n    {\n        groupinfo: {\n            icon: \"HCI\",\n            title: \"HCI-Gruppe\",\n            lastchatmessage: {\n                name: \"Doug\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            }\n        }\n    }\n     */\n    return (\n        <div className={\"flex flex-row border-2 border-gray-500 p-2\"}>\n            <div>\n                <div\n                    className={\n                        \"border-2 border-black p-2 w-16 text-center font-black\"\n                    }\n                >\n                    {props.groupinfo.icon}\n                </div>\n            </div>\n            <div className={\"flex flex-col\"}>\n                <div className={\"mx-1 self-start\"}>{props.groupinfo.title}</div>\n                <ChatMessage\n                    data={props.groupinfo.lastchatmessage}\n                    displayAsRow\n                />\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { GROUPCREATE } from \"../css/classes\"\n\nexport default function GroupCreate(props) {\n    let [newGroupData, setNewGroupData] = useState({\n        groupname: \"\",\n        fieldofstudy: \"computerscience\",\n        modulestext: \"\",\n        groupdescription: \"\",\n        memberslimit: \"\",\n    })\n\n    let changeField = (key, value) => {\n        setNewGroupData({ ...newGroupData, [key]: value })\n    }\n\n    return (\n        <div className={GROUPCREATE.background}>\n            <div className={GROUPCREATE.titleBar}>Create New Study Group</div>\n            <div className={GROUPCREATE.grid}>\n                {/* <div className={GROUPCREATE.col}> */}\n                <div className={GROUPCREATE.label}>Group Name</div>\n                <input\n                    className={GROUPCREATE.inputBox}\n                    value={newGroupData.groupname}\n                    onChange={(e) => changeField(\"groupname\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Field of Study</div>\n                <select\n                    className={GROUPCREATE.inputBox}\n                    name=\"studienfach\"\n                    id=\"studienfach\"\n                    value={newGroupData.fieldofstudy}\n                    onChange={(e) => {\n                        changeField(\"fieldofstudy\", e.target.value)\n                    }}\n                >\n                    <option value=\"computerscience\">Computer Science</option>\n                    <option value=\"maths\">Maths</option>\n                    <option value=\"physics\">Physics</option>\n                    <option value=\"chemistry\">Chemistry</option>\n                    <option value=\"biology\">Biology</option>\n                </select>\n                {/* <input\n                        placeholder=\"Informatik\"\n                        className={GROUPCREATE.inputBox}\n                    /> */}\n                <div className={GROUPCREATE.label}>Modules</div>\n                <textarea\n                    className={GROUPCREATE.textArea}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"HCI, Etech, Programmieren 2\"\n                    value={newGroupData.modulestext}\n                    onChange={(e) => changeField(\"modulestext\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Group Description</div>\n                <textarea\n                    className={GROUPCREATE.textArea}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"We are looking for more Computer Science students who want to study for the HCI exam.\"\n                    value={newGroupData.groupdescription}\n                    onChange={(e) =>\n                        changeField(\"groupdescription\", e.target.value)\n                    }\n                />\n                <div className={GROUPCREATE.label}>Members Limit</div>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"1000\"\n                    value={newGroupData.memberslimit}\n                    className={GROUPCREATE.inputBox}\n                    onChange={(e) => changeField(\"memberlimit\", e.target.value)}\n                />\n                {/* </div> */}\n            </div>\n            <div className={GROUPCREATE.row}>\n                <button\n                    className={GROUPCREATE.acceptButton}\n                    onClick={(e) => {\n                        props.createNewGroup(newGroupData)\n                    }}\n                >\n                    Create New Group\n                </button>\n                <button\n                    className={GROUPCREATE.cancelButton}\n                    onClick={(e) => props.setHomeDisplay(undefined)}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import moment from \"moment\"\n\nexport let exampleJoinedGroups = [\n    {\n        id: 1,\n        icon: \"HCI\",\n        title: \"HCI-Gruppe\",\n        createdBy: \"Alice\",\n        createdDate: moment(\"2020-12-15\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Mensch-Computer-Interaktion\",\n        memberCount: \"3\",\n        memberLimit: \"4\",\n        members: \"Alice, Bob, Doug\",\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Doug\",\n            text: \"Hallo wie gehts euch?\",\n            time: Date.now(),\n        },\n    },\n    {\n        id: 2,\n        icon: \"SWT\",\n        title: \"Software-team\",\n        createdBy: \"Bob\",\n        createdDate: moment(\"2020-12-10\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Software-Technik\",\n        memberCount: \"3\",\n        memberLimit: \"5\",\n        members: \"Bob, Alice\",\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n    },\n]\n\nexport let exampleGroupData = {\n    id: 1,\n    icon: \"HCI\",\n    title: \"HCI-Gruppe\",\n    createdBy: \"Alice\",\n    createdDate: \"10.12.20\",\n    subjects: \"Informatik, Mensch-Computer-Interaktion\",\n    memberCount: \"3\",\n    memberLimit: \"4\",\n    members: \"Alice, Bob, Doug\",\n    description:\n        \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n    studyprojects: [{}],\n    chat: [\n        {\n            id: 0,\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n\n        {\n            id: 1,\n            name: \"Doug\",\n            text: \"Nee ich fange erst morgen damit an\",\n            time: Date.now(),\n        },\n        {\n            id: 2,\n            name: \"Alice\",\n            text: \"Ja ein bisschen\",\n            time: Date.now(),\n        },\n    ],\n}\n\nexport let exampleStudyProjects = [\n    {\n        id: 0,\n        projectname: \"Abgabeblatt HCI\",\n        projectdescription: \"Something\",\n        weeklymeetday: moment().weekday(),\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        deadline: moment().add(5, \"days\").valueOf(),\n    },\n]\n\nexport let exampleProfileInfo = {\n    name: \"Björk\",\n    degreecourse: \"Informatik\",\n    semester: \"5\",\n    connections: \"Email, Discord, Teams\",\n    moduls: \"HCI, Analysis A, Ausgewählte Kapitel des Rechts für Informatiker\",\n    description: \"Außerdem bin ich sehr engagiert.\",\n    hobbies: \"Meine Hobbys sind Fahrrad fahren und Kochen.\",\n}\nexport let exampleJoinGroupData = {\n    id: 1,\n    icon: \"LinA\",\n    title: \"LinA-Lerngruppe\",\n    createdBy: \"Mike\",\n    createdDate: new Date(2020, 11, 15),\n    subjects: [\"Informatik\", \"Lineare Algebra\"],\n    memberCount: \"3\",\n    memberLimit: \"5\",\n    members: [\"Mike\", \"Bob\", \"Doug\"],\n    description:\n        \"Meiner Lerngruppe und mir fehlen für die Abgabe noch 2 Personen. Bitte meldet euch schnell, die nächste Abgabe ist am 20.12.!\",\n}\n\nexport let exampleChatMessages = [\n    {\n        id: 1,\n        name: \"Paul\",\n        text: \"Hallo wie gehts euch?\",\n        time: Date.now(),\n    },\n    {\n        id: 2,\n        name: \"Anna\",\n        text: \"Ja mir gehts gut und dir?\",\n        time: Date.now(),\n    },\n    {\n        id: 3,\n        name: \"Doug\",\n        text: \"Hallo mir geht es auch super\",\n        time: Date.now(),\n    },\n]\n","import React, { useState } from \"react\"\nimport ChatMessage from \"./ChatMessage\"\nimport { exampleChatMessages } from \"../constants/exampledata\"\nconst cloneDeep = require(\"clone-deep\")\n\nexport default function Chat(props) {\n    /*\n    props: chatMessages: [\n            {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            },\n            {\n                name: \"Anna\",\n                text: \"Ja mir gehts gut und dir?\",\n                time: Date.now(),\n            },\n        ]\n     */\n    let [username] = useState(\"Doug\")\n    let [chatMessages, setChatMessages] = useState(\n        props.chatMessages !== undefined\n            ? props.chatMessages\n            : exampleChatMessages\n    )\n    let [newMessageText, setNewMessageText] = useState(\"\")\n\n    let addChatMessage = (username, message) => {\n        let messagesCopy = cloneDeep(chatMessages)\n        messagesCopy.push({\n            id: Date.now(),\n            name: username,\n            text: message,\n            time: Date.now(),\n        })\n        setChatMessages(messagesCopy)\n        setNewMessageText(\"\")\n    }\n\n    let messagesAsHtml = chatMessages.map((data) => {\n        return (\n            <ChatMessage\n                key={data.id}\n                data={data}\n                messageByMe={data.name === username}\n            />\n        )\n    })\n\n    let chatInput = undefined\n    if (\n        props.displayChatInput === undefined ||\n        props.displayChatInput === true\n    ) {\n        chatInput = (\n            <div className=\"flex flex-row bg-blue-100\">\n                <input\n                    className=\"self-start w-full p-2 m-2\"\n                    type=\"text\"\n                    placeholder={\"Message\"}\n                    value={newMessageText}\n                    onChange={(e) => {\n                        setNewMessageText(e.target.value)\n                    }}\n                />\n                <button\n                    className=\"self-end p-2 m-2\"\n                    onClick={(e) => {\n                        addChatMessage(username, newMessageText)\n                    }}\n                >\n                    Send\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <div className=\"flex flex-col bg-blue-200\">{messagesAsHtml}</div>\n            {chatInput}\n        </div>\n    )\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function StudyProjectPreview(props) {\n    let projectData = props.projectData\n    return (\n        <div className={\"flex flex-col border-2 border-black m-1 p-1\"}>\n            <div className={\"self-start\"}>{projectData.projectname}</div>\n            <div className={\"self-end\"}>\n                due {moment(projectData.deadline).fromNow()}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport let WEEKDAYS = [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n]\n\nexport let defaultFilter = {\n    groupname: \"\",\n    fieldofstudy: \"\",\n    modulestext: \"\",\n    freeslots: \"\",\n}\n\nexport let applyGroupFilter = (group, filterSettings) => {\n    if (\n        filterSettings.groupname !== \"\" &&\n        !group.title\n            .toLowerCase()\n            .includes(filterSettings.groupname.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.fieldofstudy !== \"\" &&\n        !group.fieldofstudy\n            .toLowerCase()\n            .includes(filterSettings.fieldofstudy.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.modulestext !== \"\" &&\n        !group.modules\n            .toLowerCase()\n            .includes(filterSettings.modulestext.toLowerCase())\n    ) {\n        return false\n    }\n    let freeSlots = parseInt(group.memberLimit) - parseInt(group.memberCount)\n    if (\n        filterSettings.freeslots !== \"\" &&\n        parseInt(filterSettings.freeslots) > freeSlots\n    ) {\n        return false\n    }\n    return true\n}\n\nexport let ICONS = {\n    GEAR: <div>&#9881;</div>,\n}\n","import React from \"react\"\nimport Chat from \"./Chat\"\nimport StudyProjectPreview from \"./StudyProjectPreview\"\nimport {\n    exampleGroupData,\n    exampleStudyProjects,\n} from \"../constants/exampledata\"\nimport { ICONS } from \"../constants/constants\"\n\nexport default function GroupInfoJoined(props) {\n    /*\n    props: {\n        groupid: 1\n        studyProjects: [\n           {\n                projectname: \"Abgabeblatt HCI\",\n                projectdescription: \"Something\",\n                weeklymeetday: moment().weekday(),\n                weeklymeetstarttime: Date.now(),\n                weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n                deadline: moment().add(5, \"days\").valueOf(),\n            }\n        ]\n    }\n     */\n\n    // If props.studyProjects not available: use a basic example\n    let studyProjects =\n        props.studyProjects !== undefined\n            ? props.studyProjects\n            : exampleStudyProjects\n\n    // TODO Get database entry by groupid\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleGroupData\n\n    return (\n        <div className={\"flex flex-col\"}>\n            <div className={\"flex flex-row justify-between\"}>\n                <button onClick={(e) => props.setHomeDisplay(undefined)}>\n                    Back\n                </button>\n                <div className={\"flex flex-row\"}>\n                    <div>{groupData.title}</div>\n                    <button\n                        className={\n                            \"mx-2 border-black border-2 rounded-full h-6 w-6 flex items-center justify-center\"\n                        }\n                    >\n                        i\n                    </button>\n                </div>\n                {/*gear symbol*/}\n                <button className={\"text-4xl\"}>{ICONS.GEAR}</button>\n            </div>\n            <div className={\"flex flex-row border-2 border-gray-500 m-2 p-2\"}>\n                {/*study projects*/}\n                <div className={\"flex flex-col\"}>\n                    {/*create new study project*/}\n                    <button\n                        className={\"border-2 border-black m-1 p-1\"}\n                        onClick={(e) => {\n                            props.setHomeDisplay(\"createstudyproject\")\n                        }}\n                    >\n                        + Study Project\n                    </button>\n                    {/*list of active study projects*/}\n                    {studyProjects.map((projectData) => {\n                        return (\n                            <button\n                                key={projectData.id}\n                                onClick={(e) => {\n                                    props.setHomeDisplay(\"studyproject\")\n                                    props.setHomeStudyProjectDisplay(\n                                        projectData.id\n                                    )\n                                }}\n                            >\n                                <StudyProjectPreview\n                                    projectData={projectData}\n                                />\n                            </button>\n                        )\n                    })}\n                </div>\n                {/*chat messages of the group*/}\n                <div className={\"w-full\"}>\n                    <Chat chatMessages={groupData.chat} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { STUDYPROJECTCREATE } from \"../css/classes\"\nimport moment from \"moment\"\nimport { WEEKDAYS } from \"../constants/constants\"\n\nexport default function StudyProjectCreate(props) {\n    let [newStudyProjectData, setNewStudyProjectData] = useState({\n        projectname: \"\",\n        projectdescription: \"\",\n        // Get today's weekday\n        weeklymeetday: moment().weekday(),\n        // Get current time\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        // as timestamp (integer)\n        deadline: Date.now(),\n    })\n\n    let changeField = (key, value) => {\n        setNewStudyProjectData({ ...newStudyProjectData, [key]: value })\n    }\n\n    let convertTimestampToDate = (timestamp) => {\n        return moment(timestamp).format(\"mm:DD:YYYY\")\n    }\n\n    let convertDateToTimestamp = (date) => {\n        // e.g. 2021-01-06, returns timestamp of that day at midnight\n        return moment(date, [\"YYYY-MM-DD\"]).valueOf()\n    }\n\n    let convertTimeToTimestamp = (time) => {\n        // e.g. 15:05, returns timestamp of today with given time\n        return moment(time, [\"HH:mm\"]).valueOf()\n    }\n\n    let convertTimestampToTime = (timestamp) => {\n        // Converts timestamp to HH:mm which is required by <input type=\"time\"/>\n        return moment(timestamp).format(\"HH:mm\")\n    }\n\n    return (\n        <div className={STUDYPROJECTCREATE.background}>\n            <div className={STUDYPROJECTCREATE.titleBar}>\n                Create New Study Project\n            </div>\n            <div className={STUDYPROJECTCREATE.grid}>\n                {/* <div className={STUDYPROJECTCREATE.col}> */}\n                <div className={STUDYPROJECTCREATE.label}>Project Name</div>\n                <input\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.projectname}\n                    onChange={(e) => {\n                        changeField(\"projectname\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>\n                    Project Description\n                </div>\n                <textarea\n                    className={STUDYPROJECTCREATE.textArea}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"A group project to complete the HCI assignments with 4-5 members.\"\n                    value={newStudyProjectData.projectdescription}\n                    onChange={(e) => {\n                        changeField(\"projectdescription\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>Weekly Meet Day</div>\n                <select\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.weeklymeetday}\n                    onChange={(e) => {\n                        changeField(\"weeklymeetday\", e.target.value)\n                    }}\n                >\n                    {WEEKDAYS.map((value, index) => {\n                        return (\n                            <option key={value} value={`${index}`}>\n                                {value}\n                            </option>\n                        )\n                    })}\n                </select>\n                <div className={STUDYPROJECTCREATE.label}>\n                    Weekly Meeting Time\n                </div>\n                <div className={\"grid grid-cols-3\"}>\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetstarttime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetstarttime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                    <div className={\"text-center self-center\"}>to</div>\n\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetendtime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetendtime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                </div>\n                <div className={STUDYPROJECTCREATE.label}>Deadline</div>\n                <input\n                    type=\"date\"\n                    value={convertTimestampToDate(newStudyProjectData.deadline)}\n                    className={STUDYPROJECTCREATE.inputBox}\n                    onChange={(e) => {\n                        changeField(\n                            \"deadline\",\n                            convertDateToTimestamp(e.target.value)\n                        )\n                    }}\n                />\n            </div>\n            <div className={STUDYPROJECTCREATE.row}>\n                <button\n                    className={STUDYPROJECTCREATE.acceptButton}\n                    onClick={(e) => {\n                        props.createNewStudyProject(\n                            props.groupid,\n                            newStudyProjectData\n                        )\n                    }}\n                >\n                    Create New Study Project\n                </button>\n                <button\n                    className={STUDYPROJECTCREATE.cancelButton}\n                    onClick={(e) => {\n                        props.setHomeDisplay(\"mygroup\")\n                    }}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleStudyProjects } from \"../constants/exampledata\"\nimport moment from \"moment\"\n\nexport default function StudyProjectInfo(props) {\n    let projectInfo =\n        props.projectInfo !== undefined\n            ? props.projectInfo\n            : exampleStudyProjects[0]\n\n    let meetDay = moment().weekday(projectInfo.weeklymeetday)\n    let meetStartTime = moment(projectInfo.weeklymeetstarttime).format(\"HH:mm\")\n    let meetEndTime = moment(projectInfo.weeklymeetendtime).format(\"HH:mm\")\n    let meetDayAndTime = `${meetDay} ${meetStartTime} - ${meetEndTime}`\n\n    let deadline = moment(projectInfo.deadline)\n    let deadlineFromNow = deadline.fromNow()\n    let deadlineReadable = deadline.format(\"DD MMM YYYY HH:mm\")\n\n    return (\n        <div className={\"grid grid-cols-2\"}>\n            <div>Project name:</div>\n            <div>{projectInfo.projectname}</div>\n            <div>Project description:</div>\n            <div>{projectInfo.projectdescription}</div>\n            <div>Meeting day:</div>\n            <div>{meetDayAndTime}</div>\n            <div>Deadline:</div>\n            <div>\n                {deadlineReadable} (which is {deadlineFromNow})\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport profilePic from \"../BSP_PB.png\"\nimport { exampleProfileInfo } from \"../constants/exampledata\"\n\nexport default function Profile(props) {\n    // TODO able to upload profile picture\n    // list username\n    // studiengang, semester\n    // kontaktinformation\n    // biografie, interessen\n\n    // funktionen:\n    // profil bearbeiten\n    // benachrichtigung\n    // pw aendern / vergessen\n    // account loeschen\n\n    let profileInfo = exampleProfileInfo\n    //let profilePic = {}\n    let mycss = \"m-auto\"\n    let containercss = \"flex flex-col bg-gray-500 m-20\"\n    return (\n        <div className={containercss}>\n            <div className=\"one-fourth\" id=\"html\">\n                <img src={profilePic} alt=\"Profile pic\" />\n            </div>\n\n            <div className={mycss}>Name: {profileInfo.name}</div>\n            <div className={mycss}>\n                {profileInfo.degreecourse}, {profileInfo.semester}. Semester\n            </div>\n            <div className={mycss}>\n                Erreichbar unter: {profileInfo.connections}\n            </div>\n\n            {/*TODOZeilenumbruch einfügen*/}\n            <div className={mycss}>\n                Ich belege dieses Semester folgende Module:}\n                {profileInfo.moduls}\n            </div>\n            <div className={mycss}>{profileInfo.description}</div>\n            <div className={mycss}>{profileInfo.hobbies}</div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\n\nexport default function Calendar(props) {\n    let [weekOffset, setWeekOffset] = useState(0)\n\n    let exampleData = [\n        {\n            title: \"HCI Assignment1\",\n            color: \"bg-red-300\",\n            // 0-6, Here: saturday\n            meetingDay: 5,\n            // 14:30\n            meetingTime: new Date(0, 0, 0, 14, 30),\n            startdate: new Date(2020, 11, 1),\n            deadline: new Date(2021, 0, 4),\n        },\n        {\n            title: \"HCI Assignment2\",\n            color: \"bg-red-500\",\n            // 0-6, Here: saturday\n            meetingDay: 3,\n            // 12:00\n            meetingTime: new Date(0, 0, 0, 12, 0),\n            startdate: new Date(2020, 11, 25),\n            deadline: new Date(2021, 1, 4),\n        },\n    ]\n\n    let weekTitles = [[], [], [], [], [], [], []]\n    let now = new Date()\n    let startOfWeek = new Date(\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDate() - now.getDay() + 1 + 7 * weekOffset\n    )\n    let oneWeek = 7 * 24 * 60 * 60 * 1000\n    // let endOfWeek = new Date(startOfWeek.getTime() + oneWeek)\n\n    for (let i = 0; i < exampleData.length; i++) {\n        let meeting = exampleData[i]\n        let meetingTimeThisWeek = new Date(\n            startOfWeek.getFullYear(),\n            startOfWeek.getMonth(),\n            startOfWeek.getDate() + meeting.meetingDay,\n            meeting.meetingTime.getHours(),\n            meeting.meetingTime.getMinutes()\n        )\n\n        if (\n            meeting.startdate.getTime() < meetingTimeThisWeek.getTime() &&\n            meetingTimeThisWeek.getTime() < meeting.deadline.getTime()\n        ) {\n            let displayString = `${meeting.meetingTime.toLocaleTimeString(\n                \"de-DE\",\n                { timeStyle: \"short\" }\n            )} ${meeting.title}`\n            let displayHtml = (\n                <div className={meeting.color}>{displayString}</div>\n            )\n            weekTitles[meeting.meetingDay].push(displayHtml)\n            // Inserts a title like the following:\n            // let weekTitles = [[], [], [], [], [], [\"Abgabeblatt\"], []]\n        }\n    }\n\n    // Calculating calendar week, month name, year\n    let startOfYear = new Date(startOfWeek.getFullYear(), 0, 1)\n    let firstMondayOfYear = new Date(\n        startOfYear.getFullYear(),\n        0,\n        ((7 - startOfYear.getDay() + 1) % 7) + 1\n    )\n    let calendarWeek = Math.round(\n        (startOfWeek.getTime() - firstMondayOfYear.getTime()) / oneWeek + 1\n    )\n    // https://stackoverflow.com/a/18648314\n    let monthOfCalendarWeek = startOfWeek.toLocaleString(\"de-DE\", {\n        month: \"long\",\n    })\n    let yearOfCalendarWeek = startOfWeek.getFullYear()\n\n    let JSXcontent\n    // Week-view\n    if (props.weekview) {\n        JSXcontent = (\n            <div>\n                <div className=\"flex flex-row justify-between m-6 px-6\">\n                    <button\n                        className=\"rounded p-2 hover:bg-blue-200 bg-blue-300\"\n                        onClick={(e) => {\n                            setWeekOffset(weekOffset - 1)\n                        }}\n                    >\n                        Vorherige Woche\n                    </button>\n                    <div>\n                        KW {calendarWeek} {monthOfCalendarWeek}{\" \"}\n                        {yearOfCalendarWeek}\n                    </div>\n                    <button\n                        className=\"rounded p-2 hover:bg-blue-200 bg-blue-300\"\n                        onClick={(e) => {\n                            setWeekOffset(weekOffset + 1)\n                        }}\n                    >\n                        Nächste Woche\n                    </button>\n                </div>\n\n                <div className=\"grid grid-cols-7 border-4 border-black m-6\">\n                    {/*Table header*/}\n                    {[\n                        \"Montag\",\n                        \"Dienstag\",\n                        \"Mittwoch\",\n                        \"Donnerstag\",\n                        \"Freitag\",\n                        \"Samstag\",\n                        \"Sonntag\",\n                    ].map((value) => {\n                        return (\n                            <div\n                                key={value}\n                                className=\"text-center border-b-4 border-blue-200 py-4\"\n                            >\n                                {value}\n                            </div>\n                        )\n                    })}\n                    {/*TODO read data*/}\n\n                    {weekTitles.map((week, index) => {\n                        return (\n                            <div key={`${week.toString()} ${index}`}>\n                                {week.map((htmlElement) => {\n                                    return (\n                                        <div\n                                            key={htmlElement}\n                                            className=\"h-64 text-center\"\n                                        >\n                                            <div className=\"my-2\">\n                                                {htmlElement}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    } else {\n        // TODO Monatsansicht\n        JSXcontent = <div>TODO</div>\n    }\n\n    return <div>{JSXcontent}</div>\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function GroupInfoPreview(props) {\n    let group = props.group\n\n    return (\n        <div\n            key={`${group.icon}${group.title}`}\n            className=\"flex flex-col m-2 p-2 border-2 border-black\"\n        >\n            <div className=\"flex flex-row\">\n                <div className={\"border-2 border-black px-1 mx-1\"}>\n                    {group.icon}\n                </div>\n                {group.title} erstellt von {group.createdBy} am{\" \"}\n                {moment(group.createdDate).format(\"DD.MM.YY\")}\n            </div>\n            <div>\n                {group.fieldofstudy}, {group.modules}, {group.memberCount}/\n                {group.memberLimit} Mitglieder\n            </div>\n            <div>{group.members}</div>\n            <div>{group.description}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\n\nexport default function GroupInfo(props) {\n    // This page is displayed for people who want to know more about the group\n\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-row justify-start\">\n                <button\n                    className=\"p-2 bg-blue-300 rounded\"\n                    onClick={(e) => props.setGroupSearchViewGroup(undefined)}\n                >\n                    Back\n                </button>\n            </div>\n            <div className=\"flex flex-col m-2 p-2\">\n                <div className=\"self-center font-black\">{groupData.title}</div>\n                <hr />\n                <div className=\"my-2\">\n                    Erstellt von: {groupData.createdBy} am{\" \"}\n                    {groupData.createdDate.toLocaleDateString(\"de-DE\")}\n                </div>\n                <div className=\"my-2\">\n                    {groupData.subjects.join(\", \")}, {groupData.memberCount} /{\" \"}\n                    {groupData.memberLimit} Mitglieder\n                </div>\n                <div className=\"my-8\">{groupData.description}</div>\n                <button\n                    className=\"flex p-2 bg-blue-200 rounded self-center\"\n                    onClick={(e) => {\n                        props.setGroupSearchViewGroup(undefined)\n                        props.setGroupSearchRequestJoin(groupData.id)\n                    }}\n                >\n                    Anfrage senden\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\n\nexport default function GroupJoinRequest(props) {\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    return (\n        <div className=\"flex flex-col m-4 gap-2\">\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"mx-1\">Anfrage an </div>\n                <div className=\"underline mx-1\">{groupData.title}</div>\n            </div>\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"p-2\">an</div>\n                <div className=\"border border-black border-2 border-rounded rounded py-1 justify px-6 self-center\">\n                    {groupData.createdBy}\n                </div>\n            </div>\n            <textarea\n                className=\"border border-2 border-black h-64 p-2 m-2  rounded\"\n                placeholder=\"Anfrage formulieren (Zeichenbegrenzung: 500)\"\n            />\n            <div className={\"flex flex-row justify-between m-4\"}>\n                <button\n                    className=\"p-4 bg-blue-300 rounded\"\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Senden\n                </button>\n                <button\n                    className=\"p-4 bg-blue-300 rounded\"\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Zurück\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport NavBar from \"./NavBar\"\nimport FilterFunction from \"../FilterFunction\"\nimport GroupInfoJoinedPreview from \"../GroupInfoJoinedPreview\"\nimport GroupCreate from \"../GroupCreate\"\nimport GroupInfoJoined from \"../GroupInfoJoined\"\nimport StudyProjectCreate from \"../StudyProjectCreate\"\nimport StudyProjectInfo from \"../StudyProjectInfo\"\nimport {\n    exampleJoinedGroups,\n    exampleStudyProjects,\n} from \"../../constants/exampledata\"\nimport Profile from \"../Profile\"\nimport Calendar from \"./calendar/Calendar\"\nimport Chat from \"../Chat\"\nimport GroupInfoPreview from \"../GroupInfoPreview\"\nimport {\n    applyGroupFilter,\n    defaultFilter,\n    ICONS,\n} from \"../../constants/constants\"\nimport GroupInfo from \"../GroupInfo\"\nimport GroupJoinRequest from \"../GroupJoinRequest\"\n\nexport default function LoggedIn(props) {\n    // Zustand auf der website: wo man sich befindet\n    // One of: home, groupsearch, chat, calendar, profile\n    let [display, setDisplay] = useState(\"home\")\n    // If in \"home\" category, display the group once the user clicks on it\n    // One of: creategroup, mygroup, createstudyproject, studyproject\n    let [homeDisplay, setHomeDisplay] = useState(undefined)\n    let [homeGroupDisplay, setHomeGroupDisplay] = useState(undefined)\n    // eslint-disable-next-line no-unused-vars\n    let [homeStudyProjectDisplay, setHomeStudyProjectDisplay] = useState(\n        undefined\n    )\n    // Group search screen\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    let [groupSearchViewGroup, setGroupSearchViewGroup] = useState(undefined)\n    let [groupSearchRequestJoin, setGroupSearchRequestJoin] = useState(\n        undefined\n    )\n\n    let navBarClick = (buttonName) => {\n        setDisplay(buttonName)\n        // Reset variables when clicking a button on the navbar\n        setHomeDisplay(undefined)\n        setHomeGroupDisplay(undefined)\n        setHomeStudyProjectDisplay(undefined)\n        setGroupSearchViewGroup(undefined)\n        setGroupSearchRequestJoin(undefined)\n    }\n\n    let createNewGroup = (groupData) => {\n        // TODO Add data to database, verify that it doesnt exist etc.\n        console.log(\"Creating new group with data:\", groupData)\n        // Redirect to \"home\" screen\n        // TODO load newly created group\n        navBarClick(\"home\")\n    }\n\n    let createNewStudyProject = (groupid, studyProjectData) => {\n        console.log(\n            `Creating new study proejct for id ${groupid} with study project data`,\n            studyProjectData\n        )\n        setHomeDisplay(\"mygroup\")\n    }\n\n    // Example groups the user is in, assuming the user is \"Alice\"\n    let groups = exampleJoinedGroups\n\n    // Example study projects\n    let studyProjects = exampleStudyProjects\n\n    let subPage = undefined\n    // HOME SCREEN\n    if (display === \"home\") {\n        if (homeDisplay === undefined) {\n            subPage = (\n                <div>\n                    <button\n                        className={\"border-2 border-black rounded m-2 p-1\"}\n                        onClick={(e) => {\n                            setHomeDisplay(\"creategroup\")\n                        }}\n                    >\n                        + neue Gruppe erstellen\n                    </button>\n                    <div className={\"flex flex-col\"}>\n                        {/*TODO get all groups the logged in user is in, and then give the information towards the components via props*/}\n                        {groups.map((group) => {\n                            return (\n                                <button\n                                    key={group.id}\n                                    className={\"m-2\"}\n                                    onClick={(e) => {\n                                        setHomeDisplay(\"mygroup\")\n                                        setHomeGroupDisplay(group.id)\n                                    }}\n                                >\n                                    <GroupInfoJoinedPreview groupinfo={group} />\n                                </button>\n                            )\n                        })}\n                    </div>\n                </div>\n            )\n        } else if (homeDisplay === \"creategroup\") {\n            subPage = (\n                <GroupCreate\n                    setHomeDisplay={setHomeDisplay}\n                    createNewGroup={createNewGroup}\n                />\n            )\n        } else if (homeDisplay === \"mygroup\") {\n            // TODO Load database data, then display the group\n            subPage = (\n                <GroupInfoJoined\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    setHomeStudyProjectDisplay={setHomeStudyProjectDisplay}\n                    studyProjects={studyProjects}\n                />\n            )\n        } else if (homeDisplay === \"createstudyproject\") {\n            // TODO Load database data, then display the group\n            subPage = (\n                <StudyProjectCreate\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    createNewStudyProject={createNewStudyProject}\n                />\n            )\n        } else if (homeDisplay === \"studyproject\") {\n            // TODO add project info through props.projectInfo\n            subPage = (\n                <div className={\"flex flex-col\"}>\n                    <div className={\"flex flex-row justify-between\"}>\n                        <button\n                            onClick={(e) => {\n                                setHomeDisplay(\"mygroup\")\n                            }}\n                        >\n                            Back\n                        </button>\n\n                        <button className={\"text-4xl\"}>{ICONS.GEAR}</button>\n                    </div>\n                    <StudyProjectInfo />\n                </div>\n            )\n        }\n    }\n    // GROUP SEARCH SCREEN\n    else if (display === \"groupsearch\") {\n        if (\n            groupSearchViewGroup === undefined &&\n            groupSearchRequestJoin === undefined\n        ) {\n            subPage = (\n                <div className=\"flex flex-row\">\n                    <div className=\"flex flex-col\">\n                        <FilterFunction\n                            filterSettings={filterSettings}\n                            setFilterSettings={setFilterSettings}\n                        />\n                    </div>\n                    <div className={\"flex flex-col\"}>\n                        {groups\n                            .filter((group) => {\n                                return applyGroupFilter(group, filterSettings)\n                            })\n                            .map((group) => (\n                                <button\n                                    key={group.id}\n                                    onClick={(e) => {\n                                        setGroupSearchViewGroup(group.id)\n                                    }}\n                                >\n                                    <GroupInfoPreview group={group} />\n                                </button>\n                            ))}\n                    </div>\n                </div>\n            )\n        } else if (groupSearchViewGroup !== undefined) {\n            subPage = (\n                <GroupInfo\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        } else if (groupSearchRequestJoin !== undefined) {\n            subPage = (\n                <GroupJoinRequest\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        }\n    }\n    // GLOBAL CHAT SCREEN\n    else if (display === \"chat\") {\n        subPage = <Chat />\n    }\n    // CALENDAR SCREEN\n    else if (display === \"calendar\") {\n        subPage = <Calendar weekview />\n    }\n    // PROFILE SCREEN\n    else if (display === \"profile\") {\n        subPage = <Profile />\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <NavBar navBarClick={navBarClick} logOutClick={props.logOutClick} />\n            {subPage}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function Title(props) {\n    return <div className=\"text-center m-4 font-black\">Study Finder</div>\n}\n","import React, { useState } from \"react\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport Title from \"./Title\"\n\nexport default function Website(props) {\n    // eslint-disable-next-line\n    let [loggedIn, setLoggedIn] = useState(\"\")\n    // eslint-disable-next-line\n    let [show, setShow] = useState(\"home\")\n\n    let login = (username, password) => {\n        // TODO verify username and password match\n        setLoggedIn(username)\n        setShow(\"home\")\n    }\n\n    let register = (username, email, password) => {\n        // TODO verify that username and email are not in use?\n        // add new user account to database\n        // Dont redirect to the login screen after pressing \"register\" to give the user feedback?\n        // setShow(\"login\")\n    }\n\n    let logOutClick = () => {\n        setLoggedIn(\"\")\n        setShow(\"login\")\n    }\n\n    // Which subpage to show\n    let subpage = undefined\n    if (show === \"login\") {\n        subpage = <Login setShow={setShow} login={login} />\n    } else if (show === \"register\") {\n        subpage = <Register setShow={setShow} register={register} />\n    } else if (show === \"home\") {\n        subpage = <LoggedIn logOutClick={logOutClick} />\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <Title />\n            {subpage}\n            {/* TODO Footer */}\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function AdminPanel(props) {\n    return (\n        <div className=\"flex flex-col gap-2 m-4\">\n            <Link to=\"/\">Normal study project website</Link>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n            <Link to=\"/mygroups\">Meine Gruppen</Link>\n            <Link to=\"/groupinfojoined\">Eine meiner Gruppen mit Chat</Link>\n            <Link to=\"/groupsearch\">Gruppensuche</Link>\n            <Link to=\"/chat\">Nur Chat</Link>\n            <Link to=\"/createstudygroup\">Study group - Gruppe erstellen</Link>\n            <Link to=\"/createstudyproject\">Study project erstellen</Link>\n            <Link to=\"/studyprojectinfo\">Study project info</Link>\n            <Link to=\"/joingroupinformation\">Gruppe information</Link>\n            <Link to=\"/joingrouprequest\">Gruppe Anfrage senden</Link>\n            <Link to=\"/calendarmonthview\">Kalender - Monatsansicht</Link>\n            <Link to=\"/calendarweekview\">Kalender - Wochenansicht</Link>\n            <Link to=\"/myprofile\">Eigenes Profil</Link>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Route, HashRouter } from \"react-router-dom\"\nimport Website from \"./Website\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport GroupCreate from \"./GroupCreate\"\nimport StudyProjectCreate from \"./StudyProjectCreate\"\nimport Chat from \"./Chat\"\nimport Calendar from \"./loggedin/calendar/Calendar\"\nimport Profile from \"./Profile\"\nimport AdminPanel from \"./AdminPanel\"\nimport GroupInfo from \"./GroupInfo\"\nimport GroupJoinRequest from \"./GroupJoinRequest\"\nimport \"../css/tailwind.css\"\nimport GroupInfoJoined from \"./GroupInfoJoined\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport StudyProjectInfo from \"./StudyProjectInfo\"\nimport FilterFunction from \"./FilterFunction\"\nimport { exampleJoinedGroups } from \"../constants/exampledata\"\nimport GroupInfoPreview from \"./GroupInfoPreview\"\nimport { applyGroupFilter, defaultFilter } from \"../constants/constants\"\n\nexport default function MyRouter(props) {\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    return (\n        <HashRouter>\n            {/*This route is the main route of the website*/}\n            <Route exact path=\"/\" component={Website} />\n            {/*The following routes are just developer routes, not available for the user*/}\n            <Route path=\"/admin\" component={AdminPanel} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/mygroups\" component={LoggedIn} />\n            <Route path=\"/groupinfojoined\" component={GroupInfoJoined} />\n            <Route path=\"/groupsearch\">\n                <div className=\"flex flex-row\">\n                    <div className=\"flex flex-col\">\n                        <FilterFunction\n                            filterSettings={filterSettings}\n                            setFilterSettings={setFilterSettings}\n                        />\n                    </div>\n                    <div>\n                        {exampleJoinedGroups\n                            .filter((group) => {\n                                return applyGroupFilter(group, filterSettings)\n                            })\n                            .map((group) => (\n                                <GroupInfoPreview\n                                    key={group.id}\n                                    group={group}\n                                />\n                            ))}\n                    </div>\n                </div>\n            </Route>\n            <Route path=\"/chat\" component={Chat} />\n            <Route path=\"/createstudygroup\" component={GroupCreate} />\n            <Route path=\"/createstudyproject\" component={StudyProjectCreate} />\n            <Route path=\"/studyprojectinfo\" component={StudyProjectInfo} />\n            <Route path=\"/joingroupinformation\" component={GroupInfo} />\n            <Route path=\"/joingrouprequest\" component={GroupJoinRequest} />\n            <Route path=\"/calendarmonthview\" component={Calendar} />\n            <Route path=\"/calendarweekview\">\n                <Calendar weekview />\n            </Route>\n            <Route path=\"/myprofile\" component={Profile} />\n        </HashRouter>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyRouter from \"./components/MyRouter\"\n\nReactDOM.render(<MyRouter />, document.getElementById(\"root\"))\n"],"sourceRoot":""}