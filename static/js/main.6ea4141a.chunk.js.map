{"version":3,"sources":["css/classes.js","components/loggedout/Login.js","components/loggedout/Register.js","components/loggedin/NavBar.js","components/FilterFunction.js","components/ChatMessage.js","components/GroupInfoJoinedPreview.js","constants/exampledata.js","components/GroupCreate.js","components/Chat.js","components/StudyProjectPreview.js","constants/constants.js","components/GroupInfoJoined.js","components/StudyProjectCreate.js","components/StudyProjectInfo.js","components/ProfileEdit.js","components/Profile.js","components/loggedin/calendar/WeekView.js","components/loggedin/calendar/MonthView.js","components/loggedin/calendar/Calendar.js","components/GroupInfoPreview.js","components/GroupInfo.js","components/GroupJoinRequest.js","components/JoinRequests.js","components/loggedin/LoggedIn.js","components/Title.js","components/Website.js","components/AdminPanel.js","components/MyRouter.js","index.js"],"names":["LOGINCLASSES","GROUPCREATE","STUDYPROJECTCREATE","NAVBAR","CALENDAR","SECTIONS","BUTTONS","INPUTFIELD","Login","props","useState","username","setUsername","password","setPassword","loginText","setLoginText","className","onClick","setShow","placeholder","onChange","e","target","value","type","login","Register","email","setEmail","passwordRepeat","setPasswordRepeat","registerText","setRegisterText","text","console","assert","register","registerButton","Navbar","navBarClick","logOutClick","FilterFunction","setFilterOption","key","setFilterSettings","filterSettings","inputField","ChatMessage","positioningCss","messageByMe","messageAuthor","data","name","displayAsRowCss","displayAsRow","Date","time","toLocaleTimeString","GroupInfoJoinedPreview","groupinfo","icon","title","lastchatmessage","exampleJoinedGroups","id","createdBy","createdDate","moment","valueOf","fieldofstudy","modules","memberCount","memberLimit","members","description","now","exampleGroupData","subjects","studyprojects","chat","exampleStudyProjects","projectname","projectdescription","weeklymeetday","weekday","weeklymeetstarttime","weeklymeetendtime","deadline","add","exampleProfileInfo","profilePicLink","degreecourse","semester","connections","moduls","hobbies","exampleJoinGroupData","exampleChatMessages","exampleCalendarData","color","meetingDay","meetingTime","getTime","startdate","GroupCreate","newGroupData","setNewGroupData","log","useEffect","groupid","changeField","createGroupButtonVisibility","edit","applyEditGroupButtonVisibility","style","minHeight","min","max","setHomeDisplay","undefined","cloneDeep","require","Chat","chatMessages","setChatMessages","newMessageText","setNewMessageText","messagesAsHtml","map","chatInput","displayChatInput","message","messagesCopy","push","addChatMessage","StudyProjectPreview","projectData","fromNow","CONTEXT","createContext","defaultContextData","WEEKDAYS","WEEKDAYSCALENDAR","defaultFilter","groupname","modulestext","freeslots","applyGroupFilter","group","toLowerCase","includes","freeSlots","parseInt","GroupInfoJoined","useContext","contextData","studyProjects","setContextData","groupData","leaveGroupButtonCss","removeGroupButtonCss","groupId","setHomeGroupDisplay","setHomeStudyProjectDisplay","StudyProjectCreate","newStudyProjectData","setNewStudyProjectData","homeStudyProjectDisplay","timestamp","convertTimeToTimestamp","convertTimestampToTime","format","index","date","studyProjectData","studyprojectid","StudyProjectInfo","projectInfo","meetDay","meetStartTime","meetEndTime","meetDayAndTime","deadlineFromNow","deadlineReadable","ProfileEdit","profileInfoData","profileInfo","profileInfoChanged","setProfileInfoChanged","myInput","myKey","alt","src","setProfileShowEditScreen","newProfileInfo","setProfileInfo","Profile","profileShowEditScreen","mycss","WeekView","weekOffset","setWeekOffset","exampleData","weekTitles","startOfWeek","getFullYear","getMonth","getDate","getDay","startOfWeekMoment","i","length","meeting","meetingMoment","meetingTimeThisWeek","displayString","displayHtml","startOfYear","firstMondayOfYear","calendarWeek","Math","round","monthOfCalendarWeek","toLocaleString","month","yearOfCalendarWeek","week","toString","htmlElement","MonthView","monthOffset","setMonthOffset","currentDate","calendarTitle","firstOfMonth","startOf","amountOfDaysThisMonth","daysInMonth","calendarData","sort","a","b","days","amountStartFillerElements","fillerStartElementsHtml","Array","amountEndFillerElements","fillerEndElementsHtml","tableHtml","day","offsetDate","clone","assignment","convertAssignmentToHtml","startDate","validAssignmentForToday","Calendar","weekview","setCalendarWeekView","GroupInfoPreview","join","GroupInfo","setGroupSearchViewGroup","toLocaleDateString","setGroupSearchRequestJoin","GroupJoinRequest","JoinRequests","requests","setRequests","joinRequestsHtml","request","LoggedIn","display","setDisplay","homeDisplay","homeGroupDisplay","groupSearchViewGroup","groupSearchRequestJoin","calendarWeekView","buttonName","subPage","createNewGroup","filter","Title","Website","show","subpage","AdminPanel","to","MyRouter","Provider","exact","path","component","monthview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ea4141a.chunk.js","sourcesContent":["export let LOGINCLASSES = {\n    // Login and registration\n    background:\n        \"flex flex-col self-center bg-gray-200 p-2 border-4 border-black rounded\",\n    row: \"flex flex-row w-128 items-center\",\n    headbar: \"flex flex-row justify-evenly my-4\",\n    highlightedBox: \"bg-gray-500 flex-grow rounded\",\n    notHighlightedBox: \"hover:bg-yellow-400 flex-grow rounded\",\n    label: \"w-32 m-2\",\n    inputBox: \"w-32 border-2 border-black rounded m-2\",\n    button: \"my-4 mx-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n}\n\nexport let GROUPCREATE = {\n    background:\n        \"flex flex-col bg-gray-200 m-2 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto  grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2 flex-grow\",\n    inputBox: \"m-2 border-2 border-black rounded flex-grow\",\n    textArea: \"m-2 border-2 border-black rounded flex-grow\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let STUDYPROJECTCREATE = {\n    background: \"flex flex-col bg-gray-200 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    // TODO Left align? right align?\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2\",\n    inputBox: \"m-2 border-2 border-black rounded\",\n    textArea: \"h-min-64 m-2 border-2 border-black rounded\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let NAVBAR = {\n    total: \"flex flex-row justify-between bg-gray-200 w-128\",\n    leftSide: \"flex flex-row rounded\",\n    rightSide: \"flex flex-row\",\n    button: \"px-4 py-2 mx-2 my-1 font-black\",\n}\n\nexport let CALENDAR = {\n    titleRow: \"flex flex-row justify-between m-6 px-6\",\n    title: \"m-auto\",\n    grid: \"grid grid-cols-7 m-6\",\n    gridWeekView: \"grid grid-cols-7 border-4 border-black m-6\",\n    tableHeaderMonthView: \"text-center\",\n    tableHeaderWeekView: \"border-b-4 border-blue-200 py-2 text-center\",\n    filler: \"border-2 border-black\",\n    calendarCells: \"flex flex-col border-2 border-black\",\n    assignment: \"text-center py-1\",\n}\n\nexport let SECTIONS = {\n    // Home\n    homeGroupDisplaySection: \"\", //\"m-auto\",\n    // Groupfinder\n    groupFinderSection: \"\",\n    // Chat\n    // Calendar\n    // Profile\n}\n\nexport let BUTTONS = {\n    // ALl other buttons\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    declineButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n    backButton: \"m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    editButton: \"m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    // Calendar\n    calendar: \"rounded p-2 hover:bg-blue-200 bg-blue-300\",\n    calendarSwapButton:\n        \"self-start m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    // Navbar\n    navbarButton: \"mx-2 my-1 px-2 py-1 rounded hover:bg-yellow-400\",\n    logoutButton: \"mx-2 my-1 px-2 py-1 rounded hover:bg-red-600\",\n    // Register and login\n    highlightedBox: \"bg-gray-500 flex-grow rounded\",\n    notHighlightedBox: \"hover:bg-yellow-400 flex-grow rounded\",\n}\n\nexport let INPUTFIELD = {\n    filterFunction: \"border-2 border-black p-1 m-1\",\n    chat: \"self-start w-full p-2 m-2\",\n    profileEdit: \"border-2\",\n    groupCreate: \"m-2 border-2 border-black rounded\",\n    studyProjectCreate: \"m-2 border-2 border-black rounded\",\n}\n","import React, { useState } from \"react\"\n\nimport { BUTTONS, LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Login(props) {\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [loginText, setLoginText] = useState(\"\")\n\n    let loginButton = () => {\n        setLoginText(\n            `You have clicked the 'login' button! No functionality is implemented yet :(`\n        )\n        props.login(username, password)\n    }\n\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button className={BUTTONS.highlightedBox}>Login</button>\n                <button\n                    className={BUTTONS.notHighlightedBox}\n                    onClick={() => props.setShow(\"register\")}\n                >\n                    Register\n                </button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={BUTTONS.acceptButton}\n                onClick={() => {\n                    loginButton()\n                }}\n            >\n                Login\n            </button>\n            <div>{loginText}</div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\n\nimport { BUTTONS, LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Register(props) {\n    let [username, setUsername] = useState(\"\")\n    let [email, setEmail] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [passwordRepeat, setPasswordRepeat] = useState(\"\")\n    let [registerText, setRegisterText] = useState(\"\")\n\n    let registerButton = () => {\n        let text = \"\"\n        if (email !== \"\") {\n            text = `Your account '${username}' has been created. An verification email to '${email}' has been sent! You may log in now.`\n        } else {\n            text =\n                \"You left the email field empty! Account could not be created.\"\n        }\n\n        setRegisterText(text)\n\n        console.assert(\n            password === passwordRepeat,\n            \"Password and password repeat are not the same!\"\n        )\n\n        props.register(username, email, password)\n    }\n\n    // TODO verify if username already in use\n    // TODO verify if email is already in use\n    // TODO when successfully registered, add text at bottom 'new user has been registered'\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button\n                    className={BUTTONS.notHighlightedBox}\n                    onClick={() => props.setShow(\"login\")}\n                >\n                    Login\n                </button>\n                <button className={BUTTONS.highlightedBox}>Register</button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Email</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    onChange={(e) => {\n                        setEmail(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Repeat Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Repeat password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPasswordRepeat(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={BUTTONS.acceptButton}\n                onClick={() => registerButton()}\n            >\n                Register\n            </button>\n            <div>{registerText}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { BUTTONS, NAVBAR } from \"../../css/classes\"\n\nexport default function Navbar(props) {\n    // TODO Underline text to let user know where he currently is\n    return (\n        <div className={NAVBAR.total}>\n            <div className={NAVBAR.leftSide}>\n                <button\n                    className={`${BUTTONS.navbarButton} bg-orange-300`}\n                    onClick={() => {\n                        props.navBarClick(\"home\")\n                    }}\n                >\n                    Home\n                </button>\n                <button\n                    className={`${BUTTONS.navbarButton} bg-red-300`}\n                    onClick={() => {\n                        props.navBarClick(\"groupsearch\")\n                    }}\n                >\n                    Gruppensuche\n                </button>\n                <button\n                    className={`${BUTTONS.navbarButton} bg-purple-300`}\n                    onClick={() => {\n                        props.navBarClick(\"chat\")\n                    }}\n                >\n                    Chat\n                </button>\n                <button\n                    className={`${BUTTONS.navbarButton} bg-blue-300`}\n                    onClick={() => {\n                        props.navBarClick(\"calendar\")\n                    }}\n                >\n                    Kalender\n                </button>\n                <button\n                    className={`${BUTTONS.navbarButton} bg-teal-300`}\n                    onClick={() => {\n                        props.navBarClick(\"profile\")\n                    }}\n                >\n                    Profil\n                </button>\n            </div>\n            <div className={NAVBAR.rightSide}>\n                <button\n                    className={`${BUTTONS.logoutButton} bg-pink-100`}\n                    onClick={() => {\n                        props.logOutClick()\n                    }}\n                >\n                    Logout\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { INPUTFIELD } from \"../css/classes\"\n\nexport default function FilterFunction(props) {\n    /*\n\n    */\n\n    let setFilterOption = (key, value) => {\n        props.setFilterSettings({ ...props.filterSettings, [key]: value })\n    }\n\n    let inputField = (key, placeholder = \"\", type = \"txt\") => {\n        return (\n            <input\n                className={INPUTFIELD.filterFunction}\n                type={type}\n                placeholder={placeholder}\n                value={props.filterSettings[key]}\n                onChange={(e) => setFilterOption(key, e.target.value)}\n            />\n        )\n    }\n\n    return (\n        <div className={\"flex flex-col border-2 border-black m-2 p-2\"}>\n            <div className={\"p-1 m-1\"}>Filterfunktion</div>\n            {inputField(\"groupname\", \"Gruppenname\")}\n            {inputField(\"fieldofstudy\", \"Studiengang\")}\n            {inputField(\"modulestext\", \"Modul\")}\n            {inputField(\"freeslots\", \"Freie Plätze\", \"number\")}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function ChatMessage(props) {\n    /*\n    props: {\n        displayAsRow: false,\n        messageByMe: true,\n        data: {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n        }\n    }\n     */\n    let positioningCss = props.messageByMe ? \"self-end\" : \"self-start\"\n    let messageAuthor = props.messageByMe ? \"mir\" : props.data.name\n    let displayAsRowCss = props.displayAsRow ? \"flex flex-row\" : \"flex flex-col\"\n    return (\n        <div className={displayAsRowCss}>\n            <div className={`${positioningCss} font-black mx-1`}>\n                {props.data.text}\n            </div>\n            {/*TODO Check if time lies in the past, if yes: add date*/}\n            <div\n                className={`${positioningCss} font-light mx-1`}\n            >{`von ${messageAuthor} um ${new Date(\n                props.data.time\n            ).toLocaleTimeString(\"de\")} Uhr`}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport ChatMessage from \"./ChatMessage\"\n\nexport default function GroupInfoJoinedPreview(props) {\n    // This component is displayed under \"home\" screen\n\n    /*\n    props:\n    {\n        groupinfo: {\n            icon: \"HCI\",\n            title: \"HCI-Gruppe\",\n            lastchatmessage: {\n                name: \"Doug\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            }\n        }\n    }\n     */\n    return (\n        <div className={\"flex flex-row\"}>\n            <div>\n                <div\n                    className={\n                        \"border-2 border-black p-2 w-16 text-center font-black\"\n                    }\n                >\n                    {props.groupinfo.icon}\n                </div>\n            </div>\n            <div className={\"flex flex-col\"}>\n                <div className={\"mx-1 self-start\"}>{props.groupinfo.title}</div>\n                <ChatMessage\n                    data={props.groupinfo.lastchatmessage}\n                    displayAsRow\n                />\n            </div>\n        </div>\n    )\n}\n","import moment from \"moment\"\n\nexport let exampleJoinedGroups = [\n    {\n        id: 1,\n        icon: \"HCI\",\n        title: \"HCI-Gruppe\",\n        createdBy: \"Alice\",\n        createdDate: moment(\"2020-12-15\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Mensch-Computer-Interaktion\",\n        memberCount: \"3\",\n        memberLimit: \"4\",\n        members: [\"Alice\", \"Bob\", \"Doug\"],\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Doug\",\n            text: \"Hallo wie gehts euch?\",\n            time: Date.now(),\n        },\n    },\n    {\n        id: 2,\n        icon: \"SWT\",\n        title: \"Software-team\",\n        createdBy: \"Bob\",\n        createdDate: moment(\"2020-12-10\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Software-Technik\",\n        memberCount: \"3\",\n        memberLimit: \"5\",\n        members: [\"Bob\", \"Alice\"],\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n    },\n]\n\nexport let exampleGroupData = {\n    id: 1,\n    icon: \"HCI\",\n    title: \"HCI-Gruppe\",\n    createdBy: \"Alice\",\n    createdDate: \"10.12.20\",\n    subjects: \"Informatik, Mensch-Computer-Interaktion\",\n    memberCount: \"3\",\n    memberLimit: \"4\",\n    members: \"Alice, Bob, Doug\",\n    description:\n        \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n    studyprojects: [{}],\n    chat: [\n        {\n            id: 0,\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n\n        {\n            id: 1,\n            name: \"Doug\",\n            text: \"Nee ich fange erst morgen damit an\",\n            time: Date.now(),\n        },\n        {\n            id: 2,\n            name: \"Alice\",\n            text: \"Ja ein bisschen\",\n            time: Date.now(),\n        },\n    ],\n}\n\nexport let exampleStudyProjects = [\n    {\n        id: 1,\n        projectname: \"Abgabeblatt HCI\",\n        projectdescription: \"Something\",\n        weeklymeetday: moment().weekday(),\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        deadline: moment().add(5, \"days\").valueOf(),\n    },\n]\n\nexport let exampleProfileInfo = {\n    profilePicLink: \"https://i.imgur.com/9BiQit3.png\",\n    name: \"Björk\",\n    degreecourse: \"Informatik\",\n    semester: \"5\",\n    connections: \"Email, Discord, Teams\",\n    moduls: \"HCI, Analysis A, Ausgewählte Kapitel des Rechts für Informatiker\",\n    description: \"Außerdem bin ich sehr engagiert.\",\n    hobbies: \"Meine Hobbys sind Fahrrad fahren und Kochen.\",\n}\nexport let exampleJoinGroupData = {\n    id: 1,\n    icon: \"LinA\",\n    title: \"LinA-Lerngruppe\",\n    createdBy: \"Mike\",\n    createdDate: new Date(2020, 11, 15),\n    subjects: [\"Informatik\", \"Lineare Algebra\"],\n    memberCount: \"3\",\n    memberLimit: \"5\",\n    members: [\"Mike\", \"Bob\", \"Doug\"],\n    description:\n        \"Meiner Lerngruppe und mir fehlen für die Abgabe noch 2 Personen. Bitte meldet euch schnell, die nächste Abgabe ist am 20.12.!\",\n}\n\nexport let exampleChatMessages = [\n    {\n        id: 1,\n        name: \"Paul\",\n        text: \"Hallo wie gehts euch?\",\n        time: Date.now(),\n    },\n    {\n        id: 2,\n        name: \"Anna\",\n        text: \"Ja mir gehts gut und dir?\",\n        time: Date.now(),\n    },\n    {\n        id: 3,\n        name: \"Doug\",\n        text: \"Hallo mir geht es auch super\",\n        time: Date.now(),\n    },\n]\n\nexport let exampleCalendarData = [\n    {\n        id: 1,\n        title: \"HCI Assignment1\",\n        color: \"bg-red-300\",\n        // 0-6, Here: saturday\n        meetingDay: 5,\n        // 14:30\n        meetingTime: new Date(0, 0, 0, 14, 30).getTime(),\n        startdate: new Date(2020, 11, 1).getTime(),\n        deadline: new Date(2021, 0, 4).getTime(),\n    },\n    {\n        id: 2,\n        title: \"HCI Assignment2\",\n        color: \"bg-red-500\",\n        // 0-6, Here: thursday\n        meetingDay: 3,\n        // 12:00\n        meetingTime: new Date(0, 0, 0, 12, 0).getTime(),\n        startdate: new Date(2020, 11, 25).getTime(),\n        deadline: new Date(2021, 1, 4).getTime(),\n    },\n]\n","import React, { useEffect, useState } from \"react\"\nimport { BUTTONS, GROUPCREATE, INPUTFIELD } from \"../css/classes\"\nimport { exampleJoinedGroups } from \"../constants/exampledata\"\n\nexport default function GroupCreate(props) {\n    let [newGroupData, setNewGroupData] = useState({\n        title: \"\",\n        fieldofstudy: \"Informatik\",\n        modules: \"\",\n        description: \"\",\n        memberLimit: \"\",\n    })\n\n    console.log(newGroupData)\n    let getGroupData = (groupId) => {\n        // TODO via Database get group information via groupId\n        return exampleJoinedGroups[0]\n    }\n\n    useEffect(() => {\n        setNewGroupData(getGroupData(props.groupid))\n    }, [props.groupid])\n\n    let applyGroupChanges = (groupId, newGroupData) => {\n        props.setHomeDisplay(undefined)\n        // TODO via database apply new group information\n    }\n\n    let createNewGroup = (groupData) => {\n        props.setHomeDisplay(undefined)\n        // TODO via database, create a new group\n    }\n\n    let cancelButton = () => {\n        if (props.edit) {\n            props.setHomeDisplay(\"mygroup\")\n        } else {\n            props.setHomeDisplay(undefined)\n        }\n    }\n\n    let changeField = (key, value) => {\n        setNewGroupData({ ...newGroupData, [key]: value })\n    }\n\n    let createGroupButtonVisibility = props.edit ? \"hidden\" : \"\"\n    let applyEditGroupButtonVisibility = props.edit ? \"\" : \"hidden\"\n\n    return (\n        <div className={GROUPCREATE.background}>\n            <div className={GROUPCREATE.titleBar}>Create New Study Group</div>\n            <div className={GROUPCREATE.grid}>\n                {/* <div className={GROUPCREATE.col}> */}\n                <div className={GROUPCREATE.label}>Group Name</div>\n                <input\n                    className={INPUTFIELD.groupCreate}\n                    value={newGroupData.title}\n                    onChange={(e) => changeField(\"groupname\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Field of Study</div>\n                <select\n                    className={INPUTFIELD.groupCreate}\n                    name=\"studienfach\"\n                    id=\"studienfach\"\n                    value={newGroupData.fieldofstudy}\n                    onChange={(e) => {\n                        changeField(\"fieldofstudy\", e.target.value)\n                    }}\n                >\n                    <option value=\"Informatik\">Computer Science</option>\n                    <option value=\"Mathematik\">Maths</option>\n                    <option value=\"Physik\">Physics</option>\n                    <option value=\"Chemie\">Chemistry</option>\n                    <option value=\"Biologie\">Biology</option>\n                </select>\n                {/* <input\n                        placeholder=\"Informatik\"\n                        className={GROUPCREATE.inputBox}\n                    /> */}\n                <div className={GROUPCREATE.label}>Modules</div>\n                <textarea\n                    className={INPUTFIELD.groupCreate}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"HCI, Etech, Programmieren 2\"\n                    value={newGroupData.modules}\n                    onChange={(e) => changeField(\"modulestext\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Group Description</div>\n                <textarea\n                    className={INPUTFIELD.groupCreate}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"We are looking for more Computer Science students who want to study for the HCI exam.\"\n                    value={newGroupData.description}\n                    onChange={(e) =>\n                        changeField(\"groupdescription\", e.target.value)\n                    }\n                />\n                <div className={GROUPCREATE.label}>Members Limit</div>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"1000\"\n                    value={newGroupData.memberLimit}\n                    className={INPUTFIELD.groupCreate}\n                    onChange={(e) =>\n                        changeField(\"memberslimit\", e.target.value)\n                    }\n                />\n            </div>\n            <div className={GROUPCREATE.row}>\n                <button\n                    className={`${BUTTONS.acceptButton} ${createGroupButtonVisibility}`}\n                    onClick={(e) => {\n                        createNewGroup(newGroupData)\n                    }}\n                >\n                    Create New Group\n                </button>\n                {/*Only visible when making changes to existing group*/}\n                <button\n                    className={`${BUTTONS.acceptButton} ${applyEditGroupButtonVisibility}`}\n                    onClick={(e) => {\n                        applyGroupChanges(props.groupid, newGroupData)\n                    }}\n                >\n                    Apply changes\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => cancelButton()}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport ChatMessage from \"./ChatMessage\"\nimport { exampleChatMessages } from \"../constants/exampledata\"\nimport { BUTTONS, INPUTFIELD } from \"../css/classes\"\nconst cloneDeep = require(\"clone-deep\")\n\nexport default function Chat(props) {\n    /*\n    props: chatMessages: [\n            {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            },\n            {\n                name: \"Anna\",\n                text: \"Ja mir gehts gut und dir?\",\n                time: Date.now(),\n            },\n        ]\n     */\n    let [username] = useState(\"Doug\")\n    let [chatMessages, setChatMessages] = useState(\n        props.chatMessages !== undefined\n            ? props.chatMessages\n            : exampleChatMessages\n    )\n    let [newMessageText, setNewMessageText] = useState(\"\")\n\n    let addChatMessage = (username, message) => {\n        let messagesCopy = cloneDeep(chatMessages)\n        messagesCopy.push({\n            id: Date.now(),\n            name: username,\n            text: message,\n            time: Date.now(),\n        })\n        setChatMessages(messagesCopy)\n        setNewMessageText(\"\")\n    }\n\n    let messagesAsHtml = chatMessages.map((data) => {\n        return (\n            <ChatMessage\n                key={data.id}\n                data={data}\n                messageByMe={data.name === username}\n            />\n        )\n    })\n\n    let chatInput = undefined\n    if (\n        props.displayChatInput === undefined ||\n        props.displayChatInput === true\n    ) {\n        chatInput = (\n            <div className=\"flex flex-row bg-blue-100\">\n                <input\n                    className={INPUTFIELD.chat}\n                    type=\"text\"\n                    placeholder={\"Message\"}\n                    value={newMessageText}\n                    onChange={(e) => {\n                        setNewMessageText(e.target.value)\n                    }}\n                />\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        addChatMessage(username, newMessageText)\n                    }}\n                >\n                    Send\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"m-2\"}>\n            <div className=\"flex flex-col bg-blue-200\">{messagesAsHtml}</div>\n            {chatInput}\n        </div>\n    )\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function StudyProjectPreview(props) {\n    let projectData = props.projectData\n    return (\n        <div className={\"flex flex-col\"}>\n            <div className={\"self-start\"}>{projectData.projectname}</div>\n            <div className={\"self-end\"}>\n                due {moment(projectData.deadline).fromNow()}\n            </div>\n        </div>\n    )\n}\n","import React, { createContext } from \"react\"\n\nexport let CONTEXT = createContext({})\n\nexport let defaultContextData = {\n    username: null,\n}\n\nexport let WEEKDAYS = [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n]\n\nexport let WEEKDAYSCALENDAR = [\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n    \"Sonntag\",\n]\n\nexport let defaultFilter = {\n    groupname: \"\",\n    fieldofstudy: \"\",\n    modulestext: \"\",\n    freeslots: \"\",\n}\n\nexport let applyGroupFilter = (group, filterSettings) => {\n    if (\n        filterSettings.groupname !== \"\" &&\n        !group.title\n            .toLowerCase()\n            .includes(filterSettings.groupname.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.fieldofstudy !== \"\" &&\n        !group.fieldofstudy\n            .toLowerCase()\n            .includes(filterSettings.fieldofstudy.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.modulestext !== \"\" &&\n        !group.modules\n            .toLowerCase()\n            .includes(filterSettings.modulestext.toLowerCase())\n    ) {\n        return false\n    }\n    let freeSlots = parseInt(group.memberLimit) - parseInt(group.memberCount)\n    if (\n        filterSettings.freeslots !== \"\" &&\n        parseInt(filterSettings.freeslots) > freeSlots\n    ) {\n        return false\n    }\n    return true\n}\n\nexport let ICONS = {\n    GEAR: <div>&#9881;</div>,\n}\n","import React, { useContext } from \"react\"\nimport Chat from \"./Chat\"\nimport StudyProjectPreview from \"./StudyProjectPreview\"\nimport {\n    exampleGroupData,\n    exampleStudyProjects,\n} from \"../constants/exampledata\"\nimport { CONTEXT } from \"../constants/constants\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupInfoJoined(props) {\n    /*\n    props: {\n        groupid: 1\n        studyProjects: [\n           {\n                projectname: \"Abgabeblatt HCI\",\n                projectdescription: \"Something\",\n                weeklymeetday: moment().weekday(),\n                weeklymeetstarttime: Date.now(),\n                weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n                deadline: moment().add(5, \"days\").valueOf(),\n            }\n        ]\n    }\n     */\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    let getGroupData = (groupId) => {\n        // TODO get group information from database, e.g. member count (leave and delete group button)\n        return exampleGroupData\n    }\n\n    let getStudyProjects = (groupId) => {\n        // TODO Get all the study projects from the group id\n        return exampleStudyProjects\n    }\n\n    let showJoinRequests = (groupId) => {\n        props.setHomeDisplay(\"joinrequests\")\n        // TODO\n    }\n\n    let editGroup = (groupId) => {\n        props.setHomeDisplay(\"editgroup\")\n        props.setHomeGroupDisplay(groupId)\n        // TODO load 'create group' page but with button names different: 'apply'\n    }\n\n    let leaveGroup = (userName, groupId) => {\n        props.setHomeDisplay(undefined)\n        // TODO Database interaction for leaving the group\n    }\n\n    let deleteGroup = (userName, groupId) => {\n        props.setHomeDisplay(undefined)\n        // TODO Database interaction for group deletion\n    }\n\n    // If props.studyProjects not available: use a basic example\n    let studyProjects = getStudyProjects(props.groupid)\n\n    // TODO Get database entry by groupid\n    let groupData = getGroupData(props.groupid)\n\n    // \"Remove group\" button is only available if membercount is more than 1\n    let leaveGroupButtonCss = groupData.memberCount !== \"1\" ? \"\" : \"hidden\"\n\n    // \"Remove group\" button is only available if membercount is 1\n    let removeGroupButtonCss = groupData.memberCount === \"1\" ? \"\" : \"hidden\"\n\n    return (\n        <div className={\"flex flex-col\"}>\n            <div className={\"flex flex-row justify-between\"}>\n                <button\n                    className={BUTTONS.backButton}\n                    onClick={(e) => props.setHomeDisplay(undefined)}\n                >\n                    Back\n                </button>\n                <div className={\"self-center\"}>{groupData.title}</div>\n                <div className={\"flex flex-row\"}>\n                    <button\n                        className={BUTTONS.editButton}\n                        onClick={(e) => {\n                            props.setHomeDisplay(\"groupinfo\")\n                        }}\n                    >\n                        Info\n                    </button>\n                    <button\n                        className={BUTTONS.editButton}\n                        onClick={(e) => {\n                            showJoinRequests(groupData.id)\n                        }}\n                    >\n                        Join Requests\n                    </button>\n                    <button\n                        className={BUTTONS.editButton}\n                        onClick={(e) => {\n                            editGroup(groupData.id)\n                        }}\n                    >\n                        Edit Group\n                    </button>\n\n                    <button\n                        className={`${BUTTONS.declineButton} ${leaveGroupButtonCss}`}\n                        onClick={(e) => {\n                            leaveGroup(contextData.username, groupData.id)\n                        }}\n                    >\n                        Leave Group\n                    </button>\n                    <button\n                        className={`${BUTTONS.declineButton} ${removeGroupButtonCss}`}\n                        onClick={(e) => {\n                            deleteGroup(contextData.username, groupData.id)\n                        }}\n                    >\n                        Remove Group\n                    </button>\n                </div>\n            </div>\n            <div className={\"flex flex-row border-2 border-gray-500 m-2 p-2\"}>\n                {/*study projects*/}\n                <div className={\"flex flex-col\"}>\n                    {/*create new study project*/}\n                    <button\n                        className={BUTTONS.acceptButton}\n                        onClick={(e) => {\n                            props.setHomeDisplay(\"createstudyproject\")\n                        }}\n                    >\n                        + Study Project\n                    </button>\n                    {/*list of active study projects*/}\n                    {studyProjects.map((projectData) => {\n                        return (\n                            <button\n                                className={BUTTONS.editButton}\n                                key={projectData.id}\n                                onClick={(e) => {\n                                    props.setHomeDisplay(\"studyproject\")\n                                    props.setHomeStudyProjectDisplay(\n                                        projectData.id\n                                    )\n                                }}\n                            >\n                                <StudyProjectPreview\n                                    projectData={projectData}\n                                />\n                            </button>\n                        )\n                    })}\n                </div>\n                {/*chat messages of the group*/}\n                <div className={\"w-full\"}>\n                    <Chat chatMessages={groupData.chat} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { BUTTONS, STUDYPROJECTCREATE } from \"../css/classes\"\nimport moment from \"moment\"\nimport { WEEKDAYS } from \"../constants/constants\"\nimport { exampleStudyProjects } from \"../constants/exampledata\"\n\nexport default function StudyProjectCreate(props) {\n    let [newStudyProjectData, setNewStudyProjectData] = useState({\n        id: 1,\n        projectname: \"\",\n        projectdescription: \"\",\n        // Get today's weekday\n        weeklymeetday: moment().weekday(),\n        // Get current time\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        // as timestamp (integer)\n        deadline: Date.now(),\n    })\n\n    let getStudyProjectData = (studyProjectId) => {\n        // TODO Get study project data from database via studyproject-id\n        return exampleStudyProjects[0]\n    }\n\n    useEffect(() => {\n        setNewStudyProjectData(\n            getStudyProjectData(props.homeStudyProjectDisplay)\n        )\n    }, [props.homeStudyProjectDisplay])\n\n    let changeField = (key, value) => {\n        setNewStudyProjectData({ ...newStudyProjectData, [key]: value })\n    }\n\n    let convertTimestampToDate = (timestamp) => {\n        return moment(timestamp).format(`YYYY-MM-DD`)\n    }\n\n    let convertDateToTimestamp = (date) => {\n        // e.g. 2021-01-06, returns timestamp of that day at midnight\n        return moment(date, [\"YYYY-MM-DD\"]).valueOf()\n    }\n\n    let convertTimeToTimestamp = (time) => {\n        // e.g. 15:05, returns timestamp of today with given time\n        return moment(time, [\"HH:mm\"]).valueOf()\n    }\n\n    let convertTimestampToTime = (timestamp) => {\n        // Converts timestamp to HH:mm which is required by <input type=\"time\"/>\n        return moment(timestamp).format(\"HH:mm\")\n    }\n\n    let applyStudyGroupChanges = (studyGroupId, newStudyProjectData) => {\n        props.setHomeDisplay(\"mygroup\")\n        // TODO via database apply new study project information\n    }\n\n    let createNewStudyProject = (groupId, studyProjectData) => {\n        console.log(\n            `Creating new study proejct for id ${props.groupid} with study project data`,\n            studyProjectData\n        )\n        props.setHomeDisplay(\"mygroup\")\n        // TODO via database, create a new study project\n    }\n\n    let cancelButton = () => {\n        props.setHomeDisplay(\"mygroup\")\n    }\n\n    let createGroupButtonVisibility = props.edit ? \"hidden\" : \"\"\n    let applyEditGroupButtonVisibility = props.edit ? \"\" : \"hidden\"\n\n    return (\n        <div className={STUDYPROJECTCREATE.background}>\n            <div className={STUDYPROJECTCREATE.titleBar}>\n                Create New Study Project\n            </div>\n            <div className={STUDYPROJECTCREATE.grid}>\n                {/* <div className={STUDYPROJECTCREATE.col}> */}\n                <div className={STUDYPROJECTCREATE.label}>Project Name</div>\n                <input\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.projectname}\n                    onChange={(e) => {\n                        changeField(\"projectname\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>\n                    Project Description\n                </div>\n                <textarea\n                    className={STUDYPROJECTCREATE.textArea}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"A group project to complete the HCI assignments with 4-5 members.\"\n                    value={newStudyProjectData.projectdescription}\n                    onChange={(e) => {\n                        changeField(\"projectdescription\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>Weekly Meet Day</div>\n                <select\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.weeklymeetday}\n                    onChange={(e) => {\n                        changeField(\"weeklymeetday\", e.target.value)\n                    }}\n                >\n                    {WEEKDAYS.map((value, index) => {\n                        return (\n                            <option key={value} value={`${index}`}>\n                                {value}\n                            </option>\n                        )\n                    })}\n                </select>\n                <div className={STUDYPROJECTCREATE.label}>\n                    Weekly Meeting Time\n                </div>\n                <div className={\"grid grid-cols-3\"}>\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetstarttime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetstarttime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                    <div className={\"text-center self-center\"}>to</div>\n\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetendtime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetendtime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                </div>\n                <div className={STUDYPROJECTCREATE.label}>Deadline</div>\n                <input\n                    type=\"date\"\n                    value={convertTimestampToDate(newStudyProjectData.deadline)}\n                    className={STUDYPROJECTCREATE.inputBox}\n                    onChange={(e) => {\n                        changeField(\n                            \"deadline\",\n                            convertDateToTimestamp(e.target.value)\n                        )\n                    }}\n                />\n            </div>\n            <div className={STUDYPROJECTCREATE.row}>\n                <button\n                    className={`${BUTTONS.acceptButton} ${createGroupButtonVisibility}`}\n                    onClick={(e) => {\n                        createNewStudyProject(\n                            props.groupid,\n                            newStudyProjectData\n                        )\n                    }}\n                >\n                    Create New Study Project\n                </button>\n                {/*Only visible when making changes to existing study project*/}\n                <button\n                    className={`${BUTTONS.acceptButton} ${applyEditGroupButtonVisibility}`}\n                    onClick={(e) => {\n                        applyStudyGroupChanges(\n                            props.studyprojectid,\n                            newStudyProjectData\n                        )\n                    }}\n                >\n                    Apply changes\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        cancelButton()\n                    }}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleStudyProjects } from \"../constants/exampledata\"\nimport moment from \"moment\"\n\nexport default function StudyProjectInfo(props) {\n    let getStudyProjectInfo = (studyProjectId) => {\n        // TODO Return the study project info from id\n        return exampleStudyProjects[0]\n    }\n\n    let projectInfo = getStudyProjectInfo(props.homeStudyProjectDisplay)\n\n    let meetDay = moment().weekday(projectInfo.weeklymeetday)\n    let meetStartTime = moment(projectInfo.weeklymeetstarttime).format(\"HH:mm\")\n    let meetEndTime = moment(projectInfo.weeklymeetendtime).format(\"HH:mm\")\n    let meetDayAndTime = `${meetDay} ${meetStartTime} - ${meetEndTime}`\n\n    let deadline = moment(projectInfo.deadline)\n    let deadlineFromNow = deadline.fromNow()\n    let deadlineReadable = deadline.format(\"DD MMM YYYY HH:mm\")\n\n    return (\n        <div className={\"grid grid-cols-2\"}>\n            <div>Project name:</div>\n            <div>{projectInfo.projectname}</div>\n            <div>Project description:</div>\n            <div>{projectInfo.projectdescription}</div>\n            <div>Meeting day:</div>\n            <div>{meetDayAndTime}</div>\n            <div>Deadline:</div>\n            <div>\n                {deadlineReadable} (which is {deadlineFromNow})\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState } from \"react\"\nimport { exampleProfileInfo } from \"../constants/exampledata\"\nimport { BUTTONS, INPUTFIELD } from \"../css/classes\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function ProfileEdit(props) {\n    // TODO get logged in username from props or useContext\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    // Get initial data from props (or if not given: from exampleProfileInfo)\n    let profileInfoData =\n        props.profileInfo !== undefined ? props.profileInfo : exampleProfileInfo\n    let [profileInfoChanged, setProfileInfoChanged] = useState({\n        ...profileInfoData,\n    })\n\n    let storeNewProfileInfoInDatabase = (username, newProfileInfo) => {\n        // TODO Implement database - apply changes to profile of username\n        props.setProfileInfo({ ...newProfileInfo })\n        props.setProfileShowEditScreen(false)\n    }\n\n    let myInput = (myKey, type = \"text\") => {\n        return (\n            <input\n                className={INPUTFIELD.profileEdit}\n                type={type}\n                value={profileInfoChanged[myKey]}\n                onChange={(e) => {\n                    setProfileInfoChanged({\n                        ...profileInfoChanged,\n                        [myKey]: e.target.value,\n                    })\n                }}\n            />\n        )\n    }\n\n    let labelClasses = \"font-bold\"\n\n    return (\n        <div className=\"m-2 p-2 flex flex-col\">\n            <div className=\"flex flex-col\">\n                <img\n                    className={\"m-auto\"}\n                    alt={\"profile pic\"}\n                    src={profileInfoChanged.profilePicLink}\n                />\n                <div className={labelClasses}>Profil Bild:</div>\n                {myInput(\"profilePicLink\", \"text\")}{\" \"}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Name:</div>\n                {myInput(\"name\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Degreecourse:</div>\n                {myInput(\"degreecourse\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Semester:</div>\n                {myInput(\"semester\", \"number\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Connections:</div>\n                {myInput(\"connections\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Moduls:</div>\n                {myInput(\"moduls\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Description:</div>\n                {myInput(\"description\")}\n            </div>\n            {/*TODO remaining profile fields*/}\n            <div className=\"m-2 p-2 flex justify-between\">\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        props.setProfileShowEditScreen(false)\n                    }}\n                >\n                    Cancel\n                </button>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        storeNewProfileInfoInDatabase(\n                            contextData.username,\n                            profileInfoChanged\n                        )\n                    }}\n                >\n                    Apply\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { exampleProfileInfo } from \"../constants/exampledata\"\nimport ProfileEdit from \"./ProfileEdit\"\nimport { BUTTONS } from \"../css/classes\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function Profile(props) {\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    let getProfileInfo = (userName) => {\n        // TODO return database profile data entry for username\n        return exampleProfileInfo\n    }\n    let profileInfo = getProfileInfo(contextData.username)\n\n    let removeAccount = (userName) => {\n        if (userName === null) {\n            return\n        }\n        // TODO Implement database - remove account by username: remove from all groups\n    }\n\n    if (!props.profileShowEditScreen) {\n        let mycss = \"m-auto\"\n        let containercss = \"flex flex-col\"\n\n        return (\n            <div>\n                <div className={\"flex flex-row justify-end\"}>\n                    <div className={\"flex flex-col m-2 p-2\"}>\n                        <button\n                            className={BUTTONS.editButton}\n                            onClick={(e) =>\n                                props.setProfileShowEditScreen(true)\n                            }\n                        >\n                            Edit Profile\n                        </button>\n                        <button\n                            className={BUTTONS.declineButton}\n                            onClick={(e) => {\n                                removeAccount(contextData.username)\n                            }}\n                        >\n                            Remove Account\n                        </button>\n                    </div>\n                </div>\n                <img\n                    className={mycss}\n                    src={[profileInfo.profilePicLink]}\n                    alt=\"Profile pic\"\n                />\n                <div className={containercss}>\n                    <div className={mycss}>Name: {profileInfo.name}</div>\n                    <div className={mycss}>\n                        {profileInfo.degreecourse}, {profileInfo.semester}.\n                        Semester\n                    </div>\n                    <div className={mycss}>\n                        Erreichbar unter: {profileInfo.connections}\n                    </div>\n\n                    {/*TODOZeilenumbruch einfügen*/}\n                    <div className={mycss}>\n                        Ich belege dieses Semester folgende Module:{\" \"}\n                        {profileInfo.moduls}\n                    </div>\n                    <div className={mycss}>{profileInfo.description}</div>\n                    <div className={mycss}>{profileInfo.hobbies}</div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <ProfileEdit\n                profileInfo={profileInfo}\n                setProfileShowEditScreen={props.setProfileShowEditScreen}\n            />\n        )\n    }\n}\n","import React, { useState } from \"react\"\nimport { exampleCalendarData } from \"../../../constants/exampledata\"\nimport moment from \"moment\"\nimport { BUTTONS, CALENDAR } from \"../../../css/classes\"\nimport { WEEKDAYSCALENDAR } from \"../../../constants/constants\"\n\nexport default function WeekView(props) {\n    let [weekOffset, setWeekOffset] = useState(0)\n\n    let exampleData = exampleCalendarData\n\n    let weekTitles = [[], [], [], [], [], [], []]\n    let now = new Date()\n    let startOfWeek = new Date(\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDate() - now.getDay() + 1 + 7 * weekOffset\n    )\n    let startOfWeekMoment = moment(startOfWeek)\n    let oneWeek = 7 * 24 * 60 * 60 * 1000\n\n    for (let i = 0; i < exampleData.length; i++) {\n        let meeting = exampleData[i]\n        let meetingMoment = moment(meeting.meetingTime)\n        let meetingTimeThisWeek = moment(\n            `${startOfWeekMoment.format(\"YYYY-MM-DD\")} ${meetingMoment.format(\n                \"HH:mm\"\n            )}`\n        )\n        if (\n            meeting.startdate < meetingTimeThisWeek.valueOf() &&\n            meetingTimeThisWeek.valueOf() < meeting.deadline\n        ) {\n            let displayString = `${meetingTimeThisWeek.format(\"HH:mm\")} ${\n                meeting.title\n            }`\n            let displayHtml = (\n                <div className={meeting.color}>{displayString}</div>\n            )\n            // Inserts a title like the following:\n            // let weekTitles = [[], [], [], [], [], [\"Abgabeblatt\"], []]\n            weekTitles[meeting.meetingDay].push(displayHtml)\n        }\n    }\n\n    // Calculating calendar week, month name, year\n    let startOfYear = new Date(startOfWeek.getFullYear(), 0, 1)\n    let firstMondayOfYear = new Date(\n        startOfYear.getFullYear(),\n        0,\n        ((7 - startOfYear.getDay() + 1) % 7) + 1\n    )\n    let calendarWeek = Math.round(\n        (startOfWeek.getTime() - firstMondayOfYear.getTime()) / oneWeek + 1\n    )\n    // https://stackoverflow.com/a/18648314\n    let monthOfCalendarWeek = startOfWeek.toLocaleString(\"de-DE\", {\n        month: \"long\",\n    })\n    let yearOfCalendarWeek = startOfWeek.getFullYear()\n\n    return (\n        <div>\n            <div className={CALENDAR.titleRow}>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setWeekOffset(weekOffset - 1)\n                    }}\n                >\n                    Vorherige Woche\n                </button>\n                <div className={CALENDAR.title}>\n                    KW {calendarWeek} {monthOfCalendarWeek} {yearOfCalendarWeek}\n                </div>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setWeekOffset(weekOffset + 1)\n                    }}\n                >\n                    Nächste Woche\n                </button>\n            </div>\n\n            <div className={CALENDAR.gridWeekView}>\n                {/*Table header*/}\n                {WEEKDAYSCALENDAR.map((value) => {\n                    return (\n                        <div\n                            key={value}\n                            className={CALENDAR.tableHeaderWeekView}\n                        >\n                            {value}\n                        </div>\n                    )\n                })}\n                {/*TODO read data*/}\n\n                {weekTitles.map((week, index) => {\n                    return (\n                        <div key={`${week.toString()} ${index}`}>\n                            {week.map((htmlElement) => {\n                                return (\n                                    <div key={htmlElement}>\n                                        <div className={CALENDAR.assignment}>\n                                            {htmlElement}\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport moment from \"moment\"\nimport { exampleCalendarData } from \"../../../constants/exampledata\"\nimport { WEEKDAYSCALENDAR } from \"../../../constants/constants\"\nimport { BUTTONS, CALENDAR } from \"../../../css/classes\"\n\nexport default function MonthView(props) {\n    let [monthOffset, setMonthOffset] = useState(0)\n\n    let currentDate = moment().add(monthOffset, \"month\")\n    // Z.B.: January 2021\n    let calendarTitle = currentDate.format(\"MMMM YYYY\")\n    // Z.B.: Erster Tag im Monat\n    let firstOfMonth = currentDate.startOf(\"month\")\n    // Z.B.: 31 for January\n    let amountOfDaysThisMonth = currentDate.daysInMonth()\n\n    // TODO Replace with data from props or database\n    let calendarData = exampleCalendarData\n    // Sort data by meeting time\n    calendarData.sort((a, b) => {\n        if (a.meetingTime > b.meetingTime) {\n            return 1\n        } else if (a.meetingTime < b.meetingTime) {\n            return -1\n        }\n        return 0\n    })\n\n    // Create days array\n    let days = []\n    for (let i = 1; i <= amountOfDaysThisMonth; i++) {\n        days.push(i)\n    }\n\n    // Create start filler elements\n    let amountStartFillerElements = (firstOfMonth.weekday() + 6) % 7\n    let fillerStartElementsHtml = Array(amountStartFillerElements)\n    for (let i = 0; i < amountStartFillerElements; i++) {\n        fillerStartElementsHtml.push(\n            <div key={i} className={CALENDAR.filler} />\n        )\n    }\n\n    // Create end filler elements\n    let amountEndFillerElements =\n        7 - ((amountStartFillerElements + amountOfDaysThisMonth) % 7)\n    let fillerEndElementsHtml = Array(amountEndFillerElements)\n    for (let i = 0; i < amountEndFillerElements; i++) {\n        fillerEndElementsHtml.push(<div key={i} className={CALENDAR.filler} />)\n    }\n\n    // TODO Mobile support (small width)\n\n    let validAssignmentForToday = (assignment, date) => {\n        // Returns assignment if valid, else null\n        let startDate = assignment.startdate\n        let deadline = assignment.deadline\n        // 0-6 as Monday-Sunday\n        let weekday = (moment(date).weekday() + 6) % 7\n        if (\n            startDate < date &&\n            date < deadline &&\n            weekday === assignment.meetingDay\n        ) {\n            return assignment\n        }\n        return null\n    }\n\n    let convertAssignmentToHtml = (assignment) => {\n        if (!assignment) {\n            return\n        }\n        return (\n            <div\n                key={`${assignment.id} ${assignment.title}`}\n                className={`${assignment.color} ${CALENDAR.assignment}`}\n            >\n                {moment(assignment.meetingTime).format(\"HH:mm\")}{\" \"}\n                {assignment.title}\n            </div>\n        )\n    }\n\n    let tableHtml = (\n        <div className={CALENDAR.grid}>\n            {WEEKDAYSCALENDAR.map((day) => {\n                return (\n                    <div className={CALENDAR.tableHeaderMonthView} key={day}>\n                        {day}\n                    </div>\n                )\n            })}\n            {fillerStartElementsHtml}\n            {days.map((day, index) => {\n                let offsetDate = firstOfMonth.clone().add(index, \"day\")\n\n                return (\n                    <div className={CALENDAR.calendarCells} key={day}>\n                        <div>{day}</div>\n                        {/*// TODO Sort assignments by time*/}\n                        {calendarData.map((assignment) => {\n                            return convertAssignmentToHtml(\n                                validAssignmentForToday(assignment, offsetDate),\n                                offsetDate\n                            )\n                        })}\n                    </div>\n                )\n            })}\n            {fillerEndElementsHtml}\n        </div>\n    )\n\n    return (\n        <div>\n            <div className={CALENDAR.titleRow}>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setMonthOffset(monthOffset - 1)\n                    }}\n                >\n                    Vorheriger Monat\n                </button>\n                <div className={CALENDAR.title}>{calendarTitle}</div>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setMonthOffset(monthOffset + 1)\n                    }}\n                >\n                    Nächster Monat\n                </button>\n            </div>\n            {tableHtml}\n        </div>\n    )\n}\n","import React from \"react\"\nimport WeekView from \"./WeekView\"\nimport MonthView from \"./MonthView\"\nimport { BUTTONS } from \"../../../css/classes\"\n\nexport default function Calendar(props) {\n    if (props.weekview) {\n        // Week-view\n        return (\n            <div className={\"flex flex-col\"}>\n                <button\n                    className={BUTTONS.calendarSwapButton}\n                    onClick={(e) => {\n                        props.setCalendarWeekView(false)\n                    }}\n                >\n                    Monats-Ansicht\n                </button>\n                <WeekView setCalendarWeekView={props.setCalendarWeekView} />\n            </div>\n        )\n    } else {\n        //Month-View\n        return (\n            <div className={\"flex flex-col\"}>\n                <button\n                    className={BUTTONS.calendarSwapButton}\n                    onClick={(e) => {\n                        props.setCalendarWeekView(true)\n                    }}\n                >\n                    Wochen-Ansicht\n                </button>\n                <MonthView setCalendarWeekView={props.setCalendarWeekView} />\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function GroupInfoPreview(props) {\n    let group = props.group\n\n    return (\n        <div key={`${group.icon}${group.title}`} className=\"flex flex-col\">\n            <div className=\"flex flex-row\">\n                <div className={\"border-2 border-black px-1 mx-1\"}>\n                    {group.icon}\n                </div>\n                {group.title} erstellt von {group.createdBy} am{\" \"}\n                {moment(group.createdDate).format(\"DD.MM.YY\")}\n            </div>\n            <div>\n                {group.fieldofstudy}, {group.modules}, {group.memberCount}/\n                {group.memberLimit} Mitglieder\n            </div>\n            <div>{group.members.join(\", \")}</div>\n            <div>{group.description}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupInfo(props) {\n    // This page is displayed for people who want to know more about the group\n\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    // TODO Reuse this component to display information about the group\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-row justify-start\">\n                <button\n                    className={BUTTONS.backButton}\n                    onClick={(e) => props.setGroupSearchViewGroup(undefined)}\n                >\n                    Back\n                </button>\n            </div>\n            <div className=\"flex flex-col m-2 p-2\">\n                <div className=\"self-center font-black\">{groupData.title}</div>\n                <hr />\n                <div className=\"my-2\">\n                    Erstellt von: {groupData.createdBy} am{\" \"}\n                    {groupData.createdDate.toLocaleDateString(\"de-DE\")}\n                </div>\n                <div className=\"my-2\">\n                    {groupData.subjects.join(\", \")}, {groupData.memberCount} /{\" \"}\n                    {groupData.memberLimit} Mitglieder\n                </div>\n                <div className=\"my-8\">{groupData.description}</div>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.setGroupSearchViewGroup(undefined)\n                        props.setGroupSearchRequestJoin(groupData.id)\n                    }}\n                >\n                    Anfrage senden\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupJoinRequest(props) {\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    return (\n        <div className=\"flex flex-col m-4 gap-2\">\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"mx-1\">Anfrage an </div>\n                <div className=\"underline mx-1\">{groupData.title}</div>\n            </div>\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"p-2\">an</div>\n                <div className=\"border border-black border-2 border-rounded rounded py-1 justify px-6 self-center\">\n                    {groupData.createdBy}\n                </div>\n            </div>\n            <textarea\n                className=\"border border-2 border-black h-64 p-2 m-2  rounded\"\n                placeholder=\"Anfrage formulieren (Zeichenbegrenzung: 500)\"\n            />\n            <div className={\"flex flex-row justify-between m-4\"}>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Senden\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Zurück\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport * as moment from \"moment\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function JoinRequests(props) {\n    let [requests, setRequests] = useState([])\n\n    let getJoinRequests = (groupId) => {\n        // TODO get all join requests via database by groupid\n        return [\n            {\n                id: 1,\n                name: \"Dominik\",\n                message: \"Hallo, ich moechte gerne der Gruppe beitreten!\",\n                time: moment().valueOf(),\n            },\n        ]\n    }\n\n    useEffect(() => {\n        setRequests(getJoinRequests(props.groupid))\n    }, [props.groupid])\n\n    let joinRequestsHtml = requests.map((request) => {\n        return (\n            <div key={request.id} className={\"flex flex-row\"}>\n                <div>\n                    {request.name} - {request.message} vom{\" \"}\n                    {moment(request.time).format()}\n                </div>\n                <button className={BUTTONS.acceptButton}>Annehmen</button>\n                <button className={BUTTONS.declineButton}>Ablehnen</button>\n            </div>\n        )\n    })\n\n    return (\n        <div className={\"flex flex-col\"}>\n            <button\n                className={`${BUTTONS.backButton} m-auto self-start`}\n                onClick={(e) => {\n                    props.setHomeDisplay(\"mygroup\")\n                }}\n            >\n                Back\n            </button>\n            <div>\n                TODO list join requests\n                {joinRequestsHtml}\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState } from \"react\"\nimport NavBar from \"./NavBar\"\nimport FilterFunction from \"../FilterFunction\"\nimport GroupInfoJoinedPreview from \"../GroupInfoJoinedPreview\"\nimport GroupCreate from \"../GroupCreate\"\nimport GroupInfoJoined from \"../GroupInfoJoined\"\nimport StudyProjectCreate from \"../StudyProjectCreate\"\nimport StudyProjectInfo from \"../StudyProjectInfo\"\nimport { exampleJoinedGroups } from \"../../constants/exampledata\"\nimport Profile from \"../Profile\"\nimport Calendar from \"./calendar/Calendar\"\nimport Chat from \"../Chat\"\nimport GroupInfoPreview from \"../GroupInfoPreview\"\nimport {\n    applyGroupFilter,\n    CONTEXT,\n    defaultFilter,\n} from \"../../constants/constants\"\nimport GroupInfo from \"../GroupInfo\"\nimport GroupJoinRequest from \"../GroupJoinRequest\"\nimport { BUTTONS, SECTIONS } from \"../../css/classes\"\nimport JoinRequests from \"../JoinRequests\"\n\nexport default function LoggedIn(props) {\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    // Zustand auf der website: wo man sich befindet\n    // One of: home, groupsearch, chat, calendar, profile\n    let [display, setDisplay] = useState(\"home\")\n    // If in \"home\" category, display the group once the user clicks on it\n    // One of: creategroup, mygroup, editgroup, joinrequests, createstudyproject, studyproject, studyprojectedit\n    let [homeDisplay, setHomeDisplay] = useState(undefined)\n    // Which group to display, group-id\n    let [homeGroupDisplay, setHomeGroupDisplay] = useState(undefined)\n    // eslint-disable-next-line no-unused-vars\n    // Which studyproject to display, studyproject-id\n    let [homeStudyProjectDisplay, setHomeStudyProjectDisplay] = useState(\n        undefined\n    )\n    // Group search screen\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    let [groupSearchViewGroup, setGroupSearchViewGroup] = useState(undefined)\n    let [groupSearchRequestJoin, setGroupSearchRequestJoin] = useState(\n        undefined\n    )\n    // Calendar screen\n    let [calendarWeekView, setCalendarWeekView] = useState(false)\n    // Profile screen\n    let [profileShowEditScreen, setProfileShowEditScreen] = useState(false)\n\n    let navBarClick = (buttonName) => {\n        setDisplay(buttonName)\n        // Reset variables when clicking a button on the navbar\n        setHomeDisplay(undefined)\n        setHomeGroupDisplay(undefined)\n        setHomeStudyProjectDisplay(undefined)\n        setGroupSearchViewGroup(undefined)\n        setGroupSearchRequestJoin(undefined)\n        setProfileShowEditScreen(false)\n    }\n\n    let getAllJoinedGroups = (userName) => {\n        // TODO Connect with database and return all groups the user is in\n        return exampleJoinedGroups\n    }\n\n    let getAllGroups = (userName) => {\n        // TODO Connect with database and return all groups the user is not in and has not sent a join request\n        return exampleJoinedGroups\n    }\n\n    let createNewGroup = (groupData) => {\n        // TODO Add data to database, verify that it doesnt exist etc.\n        console.log(\"Creating new group with data:\", groupData)\n        // Redirect to \"home\" screen\n        // TODO load newly created group\n        navBarClick(\"home\")\n    }\n\n    let removeStudyProject = (groupId, studyProjectId) => {\n        // TODO via database remove study project from group\n        setHomeDisplay(\"mygroup\")\n    }\n\n    let subPage = undefined\n    // HOME SCREEN\n    if (display === \"home\") {\n        if (homeDisplay === undefined) {\n            subPage = (\n                <div className={SECTIONS.homeGroupDisplaySection}>\n                    <button\n                        className={BUTTONS.acceptButton}\n                        onClick={(e) => {\n                            setHomeDisplay(\"creategroup\")\n                        }}\n                    >\n                        + neue Gruppe erstellen\n                    </button>\n                    <div className={\"grid grid-cols-1\"}>\n                        {/*TODO get all groups the logged in user is in, and then give the information towards the components via props*/}\n                        {getAllJoinedGroups(contextData.username).map(\n                            (group) => {\n                                return (\n                                    <button\n                                        key={group.id}\n                                        className={BUTTONS.editButton}\n                                        onClick={(e) => {\n                                            setHomeDisplay(\"mygroup\")\n                                            setHomeGroupDisplay(group.id)\n                                        }}\n                                    >\n                                        <GroupInfoJoinedPreview\n                                            groupinfo={group}\n                                        />\n                                    </button>\n                                )\n                            }\n                        )}\n                    </div>\n                </div>\n            )\n        } else if (homeDisplay === \"creategroup\") {\n            subPage = (\n                <GroupCreate\n                    setHomeDisplay={setHomeDisplay}\n                    createNewGroup={createNewGroup}\n                />\n            )\n        } else if (homeDisplay === \"mygroup\") {\n            // TODO Load database data, then display the group\n            subPage = (\n                <GroupInfoJoined\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    setHomeGroupDisplay={setHomeGroupDisplay}\n                    setHomeStudyProjectDisplay={setHomeStudyProjectDisplay}\n                />\n            )\n        } else if (homeDisplay === \"groupinfo\") {\n            subPage = <div>TODO display short info about this group</div>\n        } else if (homeDisplay === \"editgroup\") {\n            subPage = (\n                <GroupCreate\n                    edit\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                />\n            )\n        } else if (homeDisplay === \"joinrequests\") {\n            subPage = (\n                <JoinRequests\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                />\n            )\n        } else if (homeDisplay === \"createstudyproject\") {\n            subPage = (\n                <StudyProjectCreate\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                />\n            )\n        } else if (homeDisplay === \"studyproject\") {\n            // TODO add project info through props.projectInfo\n            subPage = (\n                <div className={\"flex flex-col\"}>\n                    <div className={\"flex flex-row justify-between\"}>\n                        <button\n                            className={BUTTONS.backButton}\n                            onClick={(e) => {\n                                setHomeDisplay(\"mygroup\")\n                            }}\n                        >\n                            Back\n                        </button>\n                        <div className={\"flex flex-row\"}>\n                            <button\n                                className={BUTTONS.editButton}\n                                onClick={(e) => {\n                                    // Go into edit study project mode\n                                    setHomeDisplay(\"studyprojectedit\")\n                                }}\n                            >\n                                Edit Study Project\n                            </button>\n                            <button\n                                className={BUTTONS.declineButton}\n                                onClick={(e) => {\n                                    removeStudyProject(\n                                        homeGroupDisplay,\n                                        homeStudyProjectDisplay\n                                    )\n                                }}\n                            >\n                                Remove Study Project\n                            </button>\n                        </div>\n                    </div>\n                    <StudyProjectInfo\n                        homeStudyProjectDisplay={homeStudyProjectDisplay}\n                    />\n                </div>\n            )\n        } else if (homeDisplay === \"studyprojectedit\") {\n            // TODO add project info through props.projectInfo\")\n            subPage = (\n                <StudyProjectCreate\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    studyprojectid={homeStudyProjectDisplay}\n                    edit\n                />\n            )\n        }\n    }\n    // GROUP SEARCH SCREEN\n    else if (display === \"groupsearch\") {\n        if (\n            groupSearchViewGroup === undefined &&\n            groupSearchRequestJoin === undefined\n        ) {\n            subPage = (\n                <div className=\"flex flex-row\">\n                    <div className=\"flex flex-col\">\n                        <FilterFunction\n                            filterSettings={filterSettings}\n                            setFilterSettings={setFilterSettings}\n                        />\n                    </div>\n                    <div className={\"flex flex-col\"}>\n                        {getAllGroups(contextData.username)\n                            .filter((group) => {\n                                return applyGroupFilter(group, filterSettings)\n                            })\n                            .map((group) => (\n                                <button\n                                    className={BUTTONS.editButton}\n                                    key={group.id}\n                                    onClick={(e) => {\n                                        setGroupSearchViewGroup(group.id)\n                                    }}\n                                >\n                                    <GroupInfoPreview group={group} />\n                                </button>\n                            ))}\n                    </div>\n                </div>\n            )\n        } else if (groupSearchViewGroup !== undefined) {\n            subPage = (\n                <GroupInfo\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        } else if (groupSearchRequestJoin !== undefined) {\n            subPage = (\n                <GroupJoinRequest\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        }\n    }\n    // GLOBAL CHAT SCREEN\n    else if (display === \"chat\") {\n        subPage = <Chat />\n    }\n    // CALENDAR SCREEN\n    else if (display === \"calendar\") {\n        subPage = (\n            <Calendar\n                weekview={calendarWeekView}\n                setCalendarWeekView={setCalendarWeekView}\n            />\n        )\n    }\n    // PROFILE SCREEN\n    else if (display === \"profile\") {\n        subPage = (\n            <Profile\n                profileShowEditScreen={profileShowEditScreen}\n                setProfileShowEditScreen={setProfileShowEditScreen}\n            />\n        )\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <NavBar navBarClick={navBarClick} logOutClick={props.logOutClick} />\n            {subPage}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function Title(props) {\n    return <div className=\"text-center m-4 font-black\">Study Finder</div>\n}\n","import React, { useContext, useState } from \"react\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport Title from \"./Title\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function Website(props) {\n    // eslint-disable-next-line\n    let [show, setShow] = useState(\"home\")\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    let login = (username, password) => {\n        // TODO verify username and password match\n        setContextData({\n            ...contextData,\n            username: username,\n        })\n        setShow(\"home\")\n    }\n\n    let register = (username, email, password) => {\n        // TODO verify that username and email are not in use?\n        // add new user account to database\n        // Dont redirect to the login screen after pressing \"register\" to give the user feedback?\n        // setShow(\"login\")\n    }\n\n    let logOutClick = () => {\n        setContextData({\n            ...contextData,\n            username: null,\n        })\n        setShow(\"login\")\n    }\n\n    // Which subpage to show\n    let subpage = undefined\n    if (show === \"login\") {\n        subpage = <Login setShow={setShow} login={login} />\n    } else if (show === \"register\") {\n        subpage = <Register setShow={setShow} register={register} />\n    } else if (show === \"home\") {\n        subpage = <LoggedIn logOutClick={logOutClick} />\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <Title />\n            {subpage}\n            {/* TODO Footer */}\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function AdminPanel(props) {\n    return (\n        <div className=\"flex flex-col gap-2 m-4\">\n            <Link to=\"/\">Normal study project website</Link>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n            <Link to=\"/mygroups\">Meine Gruppen</Link>\n            <Link to=\"/groupinfojoined\">Eine meiner Gruppen mit Chat</Link>\n            <Link to=\"/groupsearch\">Gruppensuche</Link>\n            <Link to=\"/chat\">Nur Chat</Link>\n            <Link to=\"/createstudygroup\">Study group - Gruppe erstellen</Link>\n            <Link to=\"/createstudyproject\">Study project erstellen</Link>\n            <Link to=\"/studyprojectinfo\">Study project info</Link>\n            <Link to=\"/joingroupinformation\">Gruppe information</Link>\n            <Link to=\"/joingrouprequest\">Gruppe Anfrage senden</Link>\n            <Link to=\"/calendarmonthview\">Kalender - Monatsansicht</Link>\n            <Link to=\"/calendarweekview\">Kalender - Wochenansicht</Link>\n            <Link to=\"/myprofile\">Eigenes Profil</Link>\n            <Link to=\"/profileedit\">Eigenes Profil editieren</Link>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Route, HashRouter } from \"react-router-dom\"\nimport Website from \"./Website\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport GroupCreate from \"./GroupCreate\"\nimport StudyProjectCreate from \"./StudyProjectCreate\"\nimport Chat from \"./Chat\"\nimport Calendar from \"./loggedin/calendar/Calendar\"\nimport Profile from \"./Profile\"\nimport AdminPanel from \"./AdminPanel\"\nimport GroupInfo from \"./GroupInfo\"\nimport GroupJoinRequest from \"./GroupJoinRequest\"\nimport ProfileEdit from \"./ProfileEdit\"\nimport \"../css/tailwind.css\"\nimport GroupInfoJoined from \"./GroupInfoJoined\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport StudyProjectInfo from \"./StudyProjectInfo\"\nimport FilterFunction from \"./FilterFunction\"\nimport { exampleJoinedGroups } from \"../constants/exampledata\"\nimport GroupInfoPreview from \"./GroupInfoPreview\"\nimport {\n    applyGroupFilter,\n    CONTEXT,\n    defaultContextData,\n    defaultFilter,\n} from \"../constants/constants\"\n\nexport default function MyRouter(props) {\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    let [contextData, setContextData] = useState({ ...defaultContextData })\n\n    return (\n        <CONTEXT.Provider value={{ contextData, setContextData }}>\n            <HashRouter>\n                {/*This route is the main route of the website*/}\n                <Route exact path=\"/\" component={Website} />\n                {/*The following routes are just developer routes, not available for the user*/}\n                <Route path=\"/admin\" component={AdminPanel} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/mygroups\" component={LoggedIn} />\n                <Route path=\"/groupinfojoined\" component={GroupInfoJoined} />\n                <Route path=\"/groupsearch\">\n                    <div className=\"flex flex-row\">\n                        <div className=\"flex flex-col\">\n                            <FilterFunction\n                                filterSettings={filterSettings}\n                                setFilterSettings={setFilterSettings}\n                            />\n                        </div>\n                        <div>\n                            {exampleJoinedGroups\n                                .filter((group) => {\n                                    return applyGroupFilter(\n                                        group,\n                                        filterSettings\n                                    )\n                                })\n                                .map((group) => (\n                                    <GroupInfoPreview\n                                        key={group.id}\n                                        group={group}\n                                    />\n                                ))}\n                        </div>\n                    </div>\n                </Route>\n                <Route path=\"/chat\" component={Chat} />\n                <Route path=\"/createstudygroup\" component={GroupCreate} />\n                <Route\n                    path=\"/createstudyproject\"\n                    component={StudyProjectCreate}\n                />\n                <Route path=\"/studyprojectinfo\" component={StudyProjectInfo} />\n                <Route path=\"/joingroupinformation\" component={GroupInfo} />\n                <Route path=\"/joingrouprequest\" component={GroupJoinRequest} />\n                <Route path=\"/calendarmonthview\">\n                    <Calendar monthview />\n                </Route>\n                <Route path=\"/calendarweekview\">\n                    <Calendar weekview />\n                </Route>\n                <Route path=\"/myprofile\" component={Profile} />\n                <Route path=\"/profileedit\" component={ProfileEdit} />\n            </HashRouter>\n        </CONTEXT.Provider>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyRouter from \"./components/MyRouter\"\n\nReactDOM.render(<MyRouter />, document.getElementById(\"root\"))\n"],"sourceRoot":""}