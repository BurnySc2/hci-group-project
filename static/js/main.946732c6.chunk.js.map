{"version":3,"sources":["css/classes.js","components/loggedout/Login.js","components/loggedout/Register.js","components/loggedin/NavBar.js","components/FilterFunction.js","components/ChatMessage.js","components/GroupInfoJoinedPreview.js","components/GroupCreate.js","constants/exampledata.js","components/Chat.js","components/StudyProjectPreview.js","constants/constants.js","components/GroupInfoJoined.js","components/StudyProjectCreate.js","components/StudyProjectInfo.js","components/ProfileEdit.js","components/Profile.js","components/loggedin/calendar/WeekView.js","components/loggedin/calendar/MonthView.js","components/loggedin/calendar/Calendar.js","components/GroupInfoPreview.js","components/GroupInfo.js","components/GroupJoinRequest.js","components/loggedin/LoggedIn.js","components/Title.js","components/Website.js","components/AdminPanel.js","components/MyRouter.js","index.js"],"names":["LOGINCLASSES","GROUPCREATE","STUDYPROJECTCREATE","NAVBAR","CALENDAR","SECTIONS","BUTTONS","INPUTFIELD","Login","props","useState","username","setUsername","password","setPassword","loginText","setLoginText","className","onClick","setShow","placeholder","onChange","e","target","value","type","login","Register","email","setEmail","passwordRepeat","setPasswordRepeat","registerText","setRegisterText","text","console","assert","register","registerButton","Navbar","navBarClick","logOutClick","FilterFunction","setFilterOption","key","setFilterSettings","filterSettings","inputField","ChatMessage","positioningCss","messageByMe","messageAuthor","data","name","displayAsRowCss","displayAsRow","Date","time","toLocaleTimeString","GroupInfoJoinedPreview","groupinfo","icon","title","lastchatmessage","GroupCreate","groupname","fieldofstudy","modulestext","groupdescription","memberslimit","newGroupData","setNewGroupData","changeField","id","style","minHeight","min","max","createNewGroup","setHomeDisplay","undefined","exampleJoinedGroups","createdBy","createdDate","moment","valueOf","modules","memberCount","memberLimit","members","description","now","exampleGroupData","subjects","studyprojects","chat","exampleStudyProjects","projectname","projectdescription","weeklymeetday","weekday","weeklymeetstarttime","weeklymeetendtime","deadline","add","exampleProfileInfo","profilePicLink","degreecourse","semester","connections","moduls","hobbies","exampleJoinGroupData","exampleChatMessages","exampleCalendarData","color","meetingDay","meetingTime","getTime","startdate","cloneDeep","require","Chat","chatMessages","setChatMessages","newMessageText","setNewMessageText","messagesAsHtml","map","chatInput","displayChatInput","message","messagesCopy","push","addChatMessage","StudyProjectPreview","projectData","fromNow","CONTEXT","createContext","defaultContextData","WEEKDAYS","WEEKDAYSCALENDAR","defaultFilter","freeslots","applyGroupFilter","group","toLowerCase","includes","freeSlots","parseInt","ICONS","GEAR","GroupInfoJoined","studyProjects","groupData","setHomeStudyProjectDisplay","StudyProjectCreate","timestamp","newStudyProjectData","setNewStudyProjectData","convertTimeToTimestamp","convertTimestampToTime","format","index","date","createNewStudyProject","groupid","StudyProjectInfo","projectInfo","meetDay","meetStartTime","meetEndTime","meetDayAndTime","deadlineFromNow","deadlineReadable","ProfileEdit","useContext","contextData","profileInfoData","setContextData","profileInfo","profileInfoChanged","setProfileInfoChanged","myInput","myKey","alt","src","setProfileShowEditScreen","newProfileInfo","setProfileInfo","Profile","profileShowEditScreen","mycss","WeekView","weekOffset","setWeekOffset","exampleData","weekTitles","startOfWeek","getFullYear","getMonth","getDate","getDay","startOfWeekMoment","i","length","meeting","meetingMoment","meetingTimeThisWeek","displayString","displayHtml","startOfYear","firstMondayOfYear","calendarWeek","Math","round","monthOfCalendarWeek","toLocaleString","month","yearOfCalendarWeek","week","toString","htmlElement","MonthView","monthOffset","setMonthOffset","currentDate","calendarTitle","firstOfMonth","startOf","amountOfDaysThisMonth","daysInMonth","calendarData","sort","a","b","days","amountStartFillerElements","fillerStartElementsHtml","Array","amountEndFillerElements","fillerEndElementsHtml","tableHtml","day","offsetDate","clone","assignment","convertAssignmentToHtml","startDate","validAssignmentForToday","Calendar","weekview","setCalendarWeekView","GroupInfoPreview","GroupInfo","setGroupSearchViewGroup","toLocaleDateString","join","setGroupSearchRequestJoin","GroupJoinRequest","LoggedIn","display","setDisplay","homeDisplay","homeGroupDisplay","setHomeGroupDisplay","groupSearchViewGroup","groupSearchRequestJoin","calendarWeekView","buttonName","groups","subPage","log","studyProjectData","filter","Title","Website","show","subpage","AdminPanel","to","MyRouter","Provider","exact","path","component","monthview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.946732c6.chunk.js","sourcesContent":["export let LOGINCLASSES = {\n    // Login and registration\n    background:\n        \"flex flex-col self-center bg-gray-200 p-2 border-4 border-black rounded\",\n    row: \"flex flex-row w-128 items-center\",\n    headbar: \"flex flex-row justify-evenly my-4\",\n    highlightedBox: \"bg-gray-500 flex-grow rounded\",\n    notHighlightedBox: \"hover:bg-yellow-400 flex-grow rounded\",\n    label: \"w-32 m-2\",\n    inputBox: \"w-32 border-2 border-black rounded m-2\",\n    button: \"my-4 mx-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n}\n\nexport let GROUPCREATE = {\n    background:\n        \"flex flex-col bg-gray-200 m-2 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto  grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2 flex-grow\",\n    inputBox: \"m-2 border-2 border-black rounded flex-grow\",\n    textArea: \"m-2 border-2 border-black rounded flex-grow\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let STUDYPROJECTCREATE = {\n    background: \"flex flex-col bg-gray-200 p-2 border-4 border-black rounded\",\n    grid: \"justify-self-auto grid grid-cols-2\",\n    titleBar: \"self-center font-black\",\n    // TODO Left align? right align?\n    col: \"flex flex-col justify-between\",\n    row: \"flex flex-row items-center justify-between\",\n    label: \"m-2\",\n    inputBox: \"m-2 border-2 border-black rounded\",\n    textArea: \"h-min-64 m-2 border-2 border-black rounded\",\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    cancelButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n}\n\nexport let NAVBAR = {\n    total: \"flex flex-row justify-between bg-gray-200 w-128\",\n    leftSide: \"flex flex-row bg-blue-100\",\n    rightSide: \"flex flex-row\",\n    button: \"px-4 py-2 mx-2 my-1 font-black\",\n}\n\nexport let CALENDAR = {\n    titleRow: \"flex flex-row justify-between m-6 px-6\",\n    title: \"m-auto\",\n    grid: \"grid grid-cols-7 m-6\",\n    gridWeekView: \"grid grid-cols-7 border-4 border-black m-6\",\n    tableHeaderMonthView: \"text-center\",\n    tableHeaderWeekView: \"border-b-4 border-blue-200 py-2 text-center\",\n    filler: \"border-2 border-black\",\n    calendarCells: \"flex flex-col border-2 border-black\",\n    assignment: \"text-center py-1\",\n}\n\nexport let SECTIONS = {\n    // Home\n    homeGroupDisplaySection: \"\", //\"m-auto\",\n    // Groupfinder\n    groupFinderSection: \"\",\n    // Chat\n    // Calendar\n    // Profile\n}\n\nexport let BUTTONS = {\n    // ALl other buttons\n    acceptButton: \"m-2 p-2 border-2 border-black rounded hover:bg-green-400\",\n    declineButton: \"m-2 p-2 border-2 border-black rounded hover:bg-red-400\",\n    backButton: \"m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    editButton: \"m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    // Calendar\n    calendar: \"rounded p-2 hover:bg-blue-200 bg-blue-300\",\n    calendarSwapButton:\n        \"self-start m-2 p-2 border-2 border-black rounded hover:bg-yellow-400\",\n    // Navbar\n    navbarButton: \"mx-2 my-1 px-2 py-1 rounded hover:bg-yellow-400\",\n    logoutButton: \"mx-2 px-2 py-1 rounded hover:bg-red-400\",\n    // Register and login\n    highlightedBox: \"bg-gray-500 flex-grow rounded\",\n    notHighlightedBox: \"hover:bg-yellow-400 flex-grow rounded\",\n}\n\nexport let INPUTFIELD = {\n    filterFunction: \"border-2 border-black p-1 m-1\",\n    chat: \"self-start w-full p-2 m-2\",\n    profileEdit: \"border-2\",\n    groupCreate: \"m-2 border-2 border-black rounded\",\n    studyProjectCreate: \"m-2 border-2 border-black rounded\",\n}\n","import React, { useState } from \"react\"\n\nimport { BUTTONS, LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Login(props) {\n    let [username, setUsername] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [loginText, setLoginText] = useState(\"\")\n\n    let loginButton = () => {\n        setLoginText(\n            `You have clicked the 'login' button! No functionality is implemented yet :(`\n        )\n        props.login(username, password)\n    }\n\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button className={BUTTONS.highlightedBox}>Login</button>\n                <button\n                    className={BUTTONS.notHighlightedBox}\n                    onClick={() => props.setShow(\"register\")}\n                >\n                    Register\n                </button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={BUTTONS.acceptButton}\n                onClick={() => {\n                    loginButton()\n                }}\n            >\n                Login\n            </button>\n            <div>{loginText}</div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\n\nimport { BUTTONS, LOGINCLASSES } from \"../../css/classes\"\n\nexport default function Register(props) {\n    let [username, setUsername] = useState(\"\")\n    let [email, setEmail] = useState(\"\")\n    let [password, setPassword] = useState(\"\")\n    let [passwordRepeat, setPasswordRepeat] = useState(\"\")\n    let [registerText, setRegisterText] = useState(\"\")\n\n    let registerButton = () => {\n        let text = \"\"\n        if (email !== \"\") {\n            text = `Your account '${username}' has been created. An verification email to '${email}' has been sent! You may log in now.`\n        } else {\n            text =\n                \"You left the email field empty! Account could not be created.\"\n        }\n\n        setRegisterText(text)\n\n        console.assert(\n            password === passwordRepeat,\n            \"Password and password repeat are not the same!\"\n        )\n\n        props.register(username, email, password)\n    }\n\n    // TODO verify if username already in use\n    // TODO verify if email is already in use\n    // TODO when successfully registered, add text at bottom 'new user has been registered'\n    return (\n        <div className={LOGINCLASSES.background}>\n            <div className={LOGINCLASSES.headbar}>\n                <button\n                    className={BUTTONS.notHighlightedBox}\n                    onClick={() => props.setShow(\"login\")}\n                >\n                    Login\n                </button>\n                <button className={BUTTONS.highlightedBox}>Register</button>\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Username</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Username\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Email</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    onChange={(e) => {\n                        setEmail(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n            </div>\n            <div className={LOGINCLASSES.row}>\n                <div className={LOGINCLASSES.label}>Repeat Password</div>\n                <input\n                    className={LOGINCLASSES.inputBox}\n                    placeholder=\"Repeat password\"\n                    type=\"password\"\n                    onChange={(e) => {\n                        setPasswordRepeat(e.target.value)\n                    }}\n                />\n            </div>\n            <button\n                className={BUTTONS.acceptButton}\n                onClick={() => registerButton()}\n            >\n                Register\n            </button>\n            <div>{registerText}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { BUTTONS, NAVBAR } from \"../../css/classes\"\n\nexport default function Navbar(props) {\n    // TODO Underline text to let user know where he currently is\n    return (\n        <div className={NAVBAR.total}>\n            <div className={NAVBAR.leftSide}>\n                <button\n                    className={BUTTONS.navbarButton}\n                    onClick={() => {\n                        props.navBarClick(\"home\")\n                    }}\n                >\n                    Home\n                </button>\n                <button\n                    className={BUTTONS.navbarButton}\n                    onClick={() => {\n                        props.navBarClick(\"groupsearch\")\n                    }}\n                >\n                    Gruppensuche\n                </button>\n                <button\n                    className={BUTTONS.navbarButton}\n                    onClick={() => {\n                        props.navBarClick(\"chat\")\n                    }}\n                >\n                    Chat\n                </button>\n                <button\n                    className={BUTTONS.navbarButton}\n                    onClick={() => {\n                        props.navBarClick(\"calendar\")\n                    }}\n                >\n                    Kalender\n                </button>\n                <button\n                    className={BUTTONS.navbarButton}\n                    onClick={() => {\n                        props.navBarClick(\"profile\")\n                    }}\n                >\n                    Profil\n                </button>\n            </div>\n            <div className={NAVBAR.rightSide}>\n                <button\n                    className={BUTTONS.logoutButton}\n                    onClick={() => {\n                        props.logOutClick()\n                    }}\n                >\n                    Logout\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { INPUTFIELD } from \"../css/classes\"\n\nexport default function FilterFunction(props) {\n    /*\n\n    */\n\n    let setFilterOption = (key, value) => {\n        props.setFilterSettings({ ...props.filterSettings, [key]: value })\n    }\n\n    let inputField = (key, placeholder = \"\", type = \"txt\") => {\n        return (\n            <input\n                className={INPUTFIELD.filterFunction}\n                type={type}\n                placeholder={placeholder}\n                value={props.filterSettings[key]}\n                onChange={(e) => setFilterOption(key, e.target.value)}\n            />\n        )\n    }\n\n    return (\n        <div className={\"flex flex-col border-2 border-black m-2 p-2\"}>\n            <div className={\"p-1 m-1\"}>Filterfunktion</div>\n            {inputField(\"groupname\", \"Gruppenname\")}\n            {inputField(\"fieldofstudy\", \"Studiengang\")}\n            {inputField(\"modulestext\", \"Modul\")}\n            {inputField(\"freeslots\", \"Freie Plätze\", \"number\")}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function ChatMessage(props) {\n    /*\n    props: {\n        displayAsRow: false,\n        messageByMe: true,\n        data: {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n        }\n    }\n     */\n    let positioningCss = props.messageByMe ? \"self-end\" : \"self-start\"\n    let messageAuthor = props.messageByMe ? \"mir\" : props.data.name\n    let displayAsRowCss = props.displayAsRow ? \"flex flex-row\" : \"flex flex-col\"\n    return (\n        <div className={displayAsRowCss}>\n            <div className={`${positioningCss} font-black mx-1`}>\n                {props.data.text}\n            </div>\n            {/*TODO Check if time lies in the past, if yes: add date*/}\n            <div\n                className={`${positioningCss} font-light mx-1`}\n            >{`von ${messageAuthor} um ${new Date(\n                props.data.time\n            ).toLocaleTimeString(\"de\")} Uhr`}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport ChatMessage from \"./ChatMessage\"\n\nexport default function GroupInfoJoinedPreview(props) {\n    // This component is displayed under \"home\" screen\n\n    /*\n    props:\n    {\n        groupinfo: {\n            icon: \"HCI\",\n            title: \"HCI-Gruppe\",\n            lastchatmessage: {\n                name: \"Doug\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            }\n        }\n    }\n     */\n    return (\n        <div className={\"flex flex-row\"}>\n            <div>\n                <div\n                    className={\n                        \"border-2 border-black p-2 w-16 text-center font-black\"\n                    }\n                >\n                    {props.groupinfo.icon}\n                </div>\n            </div>\n            <div className={\"flex flex-col\"}>\n                <div className={\"mx-1 self-start\"}>{props.groupinfo.title}</div>\n                <ChatMessage\n                    data={props.groupinfo.lastchatmessage}\n                    displayAsRow\n                />\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { BUTTONS, GROUPCREATE, INPUTFIELD } from \"../css/classes\"\n\nexport default function GroupCreate(props) {\n    let [newGroupData, setNewGroupData] = useState({\n        groupname: \"\",\n        fieldofstudy: \"computerscience\",\n        modulestext: \"\",\n        groupdescription: \"\",\n        memberslimit: \"\",\n    })\n\n    let changeField = (key, value) => {\n        setNewGroupData({ ...newGroupData, [key]: value })\n    }\n\n    return (\n        <div className={GROUPCREATE.background}>\n            <div className={GROUPCREATE.titleBar}>Create New Study Group</div>\n            <div className={GROUPCREATE.grid}>\n                {/* <div className={GROUPCREATE.col}> */}\n                <div className={GROUPCREATE.label}>Group Name</div>\n                <input\n                    className={INPUTFIELD.groupCreate}\n                    value={newGroupData.groupname}\n                    onChange={(e) => changeField(\"groupname\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Field of Study</div>\n                <select\n                    className={INPUTFIELD.groupCreate}\n                    name=\"studienfach\"\n                    id=\"studienfach\"\n                    value={newGroupData.fieldofstudy}\n                    onChange={(e) => {\n                        changeField(\"fieldofstudy\", e.target.value)\n                    }}\n                >\n                    <option value=\"computerscience\">Computer Science</option>\n                    <option value=\"maths\">Maths</option>\n                    <option value=\"physics\">Physics</option>\n                    <option value=\"chemistry\">Chemistry</option>\n                    <option value=\"biology\">Biology</option>\n                </select>\n                {/* <input\n                        placeholder=\"Informatik\"\n                        className={GROUPCREATE.inputBox}\n                    /> */}\n                <div className={GROUPCREATE.label}>Modules</div>\n                <textarea\n                    className={INPUTFIELD.groupCreate}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"HCI, Etech, Programmieren 2\"\n                    value={newGroupData.modulestext}\n                    onChange={(e) => changeField(\"modulestext\", e.target.value)}\n                />\n                <div className={GROUPCREATE.label}>Group Description</div>\n                <textarea\n                    className={INPUTFIELD.groupCreate}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"We are looking for more Computer Science students who want to study for the HCI exam.\"\n                    value={newGroupData.groupdescription}\n                    onChange={(e) =>\n                        changeField(\"groupdescription\", e.target.value)\n                    }\n                />\n                <div className={GROUPCREATE.label}>Members Limit</div>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"1000\"\n                    value={newGroupData.memberslimit}\n                    className={INPUTFIELD.groupCreate}\n                    onChange={(e) =>\n                        changeField(\"memberslimit\", e.target.value)\n                    }\n                />\n                {/* </div> */}\n            </div>\n            <div className={GROUPCREATE.row}>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.createNewGroup(newGroupData)\n                    }}\n                >\n                    Create New Group\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => props.setHomeDisplay(undefined)}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import moment from \"moment\"\n\nexport let exampleJoinedGroups = [\n    {\n        id: 1,\n        icon: \"HCI\",\n        title: \"HCI-Gruppe\",\n        createdBy: \"Alice\",\n        createdDate: moment(\"2020-12-15\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Mensch-Computer-Interaktion\",\n        memberCount: \"3\",\n        memberLimit: \"4\",\n        members: \"Alice, Bob, Doug\",\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Doug\",\n            text: \"Hallo wie gehts euch?\",\n            time: Date.now(),\n        },\n    },\n    {\n        id: 2,\n        icon: \"SWT\",\n        title: \"Software-team\",\n        createdBy: \"Bob\",\n        createdDate: moment(\"2020-12-10\").valueOf(),\n        fieldofstudy: \"Informatik\",\n        modules: \"Software-Technik\",\n        memberCount: \"3\",\n        memberLimit: \"5\",\n        members: \"Bob, Alice\",\n        description:\n            \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n        lastchatmessage: {\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n    },\n]\n\nexport let exampleGroupData = {\n    id: 1,\n    icon: \"HCI\",\n    title: \"HCI-Gruppe\",\n    createdBy: \"Alice\",\n    createdDate: \"10.12.20\",\n    subjects: \"Informatik, Mensch-Computer-Interaktion\",\n    memberCount: \"3\",\n    memberLimit: \"4\",\n    members: \"Alice, Bob, Doug\",\n    description:\n        \"Hallo, wir arbeiten an dem Project und benoetigen noch eine Person. Bitte bei Interesse anschreiben.\",\n    studyprojects: [{}],\n    chat: [\n        {\n            id: 0,\n            name: \"Bob\",\n            text: \"Habt ihr schon was gemacht?\",\n            time: Date.now(),\n        },\n\n        {\n            id: 1,\n            name: \"Doug\",\n            text: \"Nee ich fange erst morgen damit an\",\n            time: Date.now(),\n        },\n        {\n            id: 2,\n            name: \"Alice\",\n            text: \"Ja ein bisschen\",\n            time: Date.now(),\n        },\n    ],\n}\n\nexport let exampleStudyProjects = [\n    {\n        id: 0,\n        projectname: \"Abgabeblatt HCI\",\n        projectdescription: \"Something\",\n        weeklymeetday: moment().weekday(),\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        deadline: moment().add(5, \"days\").valueOf(),\n    },\n]\n\nexport let exampleProfileInfo = {\n    profilePicLink: \"https://i.imgur.com/9BiQit3.png\",\n    name: \"Björk\",\n    degreecourse: \"Informatik\",\n    semester: \"5\",\n    connections: \"Email, Discord, Teams\",\n    moduls: \"HCI, Analysis A, Ausgewählte Kapitel des Rechts für Informatiker\",\n    description: \"Außerdem bin ich sehr engagiert.\",\n    hobbies: \"Meine Hobbys sind Fahrrad fahren und Kochen.\",\n}\nexport let exampleJoinGroupData = {\n    id: 1,\n    icon: \"LinA\",\n    title: \"LinA-Lerngruppe\",\n    createdBy: \"Mike\",\n    createdDate: new Date(2020, 11, 15),\n    subjects: [\"Informatik\", \"Lineare Algebra\"],\n    memberCount: \"3\",\n    memberLimit: \"5\",\n    members: [\"Mike\", \"Bob\", \"Doug\"],\n    description:\n        \"Meiner Lerngruppe und mir fehlen für die Abgabe noch 2 Personen. Bitte meldet euch schnell, die nächste Abgabe ist am 20.12.!\",\n}\n\nexport let exampleChatMessages = [\n    {\n        id: 1,\n        name: \"Paul\",\n        text: \"Hallo wie gehts euch?\",\n        time: Date.now(),\n    },\n    {\n        id: 2,\n        name: \"Anna\",\n        text: \"Ja mir gehts gut und dir?\",\n        time: Date.now(),\n    },\n    {\n        id: 3,\n        name: \"Doug\",\n        text: \"Hallo mir geht es auch super\",\n        time: Date.now(),\n    },\n]\n\nexport let exampleCalendarData = [\n    {\n        id: 1,\n        title: \"HCI Assignment1\",\n        color: \"bg-red-300\",\n        // 0-6, Here: saturday\n        meetingDay: 5,\n        // 14:30\n        meetingTime: new Date(0, 0, 0, 14, 30).getTime(),\n        startdate: new Date(2020, 11, 1).getTime(),\n        deadline: new Date(2021, 0, 4).getTime(),\n    },\n    {\n        id: 2,\n        title: \"HCI Assignment2\",\n        color: \"bg-red-500\",\n        // 0-6, Here: thursday\n        meetingDay: 3,\n        // 12:00\n        meetingTime: new Date(0, 0, 0, 12, 0).getTime(),\n        startdate: new Date(2020, 11, 25).getTime(),\n        deadline: new Date(2021, 1, 4).getTime(),\n    },\n]\n","import React, { useState } from \"react\"\nimport ChatMessage from \"./ChatMessage\"\nimport { exampleChatMessages } from \"../constants/exampledata\"\nimport { BUTTONS, INPUTFIELD } from \"../css/classes\"\nconst cloneDeep = require(\"clone-deep\")\n\nexport default function Chat(props) {\n    /*\n    props: chatMessages: [\n            {\n                name: \"Paul\",\n                text: \"Hallo wie gehts euch?\",\n                time: Date.now(),\n            },\n            {\n                name: \"Anna\",\n                text: \"Ja mir gehts gut und dir?\",\n                time: Date.now(),\n            },\n        ]\n     */\n    let [username] = useState(\"Doug\")\n    let [chatMessages, setChatMessages] = useState(\n        props.chatMessages !== undefined\n            ? props.chatMessages\n            : exampleChatMessages\n    )\n    let [newMessageText, setNewMessageText] = useState(\"\")\n\n    let addChatMessage = (username, message) => {\n        let messagesCopy = cloneDeep(chatMessages)\n        messagesCopy.push({\n            id: Date.now(),\n            name: username,\n            text: message,\n            time: Date.now(),\n        })\n        setChatMessages(messagesCopy)\n        setNewMessageText(\"\")\n    }\n\n    let messagesAsHtml = chatMessages.map((data) => {\n        return (\n            <ChatMessage\n                key={data.id}\n                data={data}\n                messageByMe={data.name === username}\n            />\n        )\n    })\n\n    let chatInput = undefined\n    if (\n        props.displayChatInput === undefined ||\n        props.displayChatInput === true\n    ) {\n        chatInput = (\n            <div className=\"flex flex-row bg-blue-100\">\n                <input\n                    className={INPUTFIELD.chat}\n                    type=\"text\"\n                    placeholder={\"Message\"}\n                    value={newMessageText}\n                    onChange={(e) => {\n                        setNewMessageText(e.target.value)\n                    }}\n                />\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        addChatMessage(username, newMessageText)\n                    }}\n                >\n                    Send\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\"m-2\"}>\n            <div className=\"flex flex-col bg-blue-200\">{messagesAsHtml}</div>\n            {chatInput}\n        </div>\n    )\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function StudyProjectPreview(props) {\n    let projectData = props.projectData\n    return (\n        <div className={\"flex flex-col\"}>\n            <div className={\"self-start\"}>{projectData.projectname}</div>\n            <div className={\"self-end\"}>\n                due {moment(projectData.deadline).fromNow()}\n            </div>\n        </div>\n    )\n}\n","import React, { createContext } from \"react\"\n\nexport let CONTEXT = createContext({})\n\nexport let defaultContextData = {\n    username: null,\n}\n\nexport let WEEKDAYS = [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n]\n\nexport let WEEKDAYSCALENDAR = [\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n    \"Sonntag\",\n]\n\nexport let defaultFilter = {\n    groupname: \"\",\n    fieldofstudy: \"\",\n    modulestext: \"\",\n    freeslots: \"\",\n}\n\nexport let applyGroupFilter = (group, filterSettings) => {\n    if (\n        filterSettings.groupname !== \"\" &&\n        !group.title\n            .toLowerCase()\n            .includes(filterSettings.groupname.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.fieldofstudy !== \"\" &&\n        !group.fieldofstudy\n            .toLowerCase()\n            .includes(filterSettings.fieldofstudy.toLowerCase())\n    ) {\n        return false\n    }\n    if (\n        filterSettings.modulestext !== \"\" &&\n        !group.modules\n            .toLowerCase()\n            .includes(filterSettings.modulestext.toLowerCase())\n    ) {\n        return false\n    }\n    let freeSlots = parseInt(group.memberLimit) - parseInt(group.memberCount)\n    if (\n        filterSettings.freeslots !== \"\" &&\n        parseInt(filterSettings.freeslots) > freeSlots\n    ) {\n        return false\n    }\n    return true\n}\n\nexport let ICONS = {\n    GEAR: <div>&#9881;</div>,\n}\n","import React from \"react\"\nimport Chat from \"./Chat\"\nimport StudyProjectPreview from \"./StudyProjectPreview\"\nimport {\n    exampleGroupData,\n    exampleStudyProjects,\n} from \"../constants/exampledata\"\nimport { ICONS } from \"../constants/constants\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupInfoJoined(props) {\n    /*\n    props: {\n        groupid: 1\n        studyProjects: [\n           {\n                projectname: \"Abgabeblatt HCI\",\n                projectdescription: \"Something\",\n                weeklymeetday: moment().weekday(),\n                weeklymeetstarttime: Date.now(),\n                weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n                deadline: moment().add(5, \"days\").valueOf(),\n            }\n        ]\n    }\n     */\n\n    // If props.studyProjects not available: use a basic example\n    let studyProjects =\n        props.studyProjects !== undefined\n            ? props.studyProjects\n            : exampleStudyProjects\n\n    // TODO Get database entry by groupid\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleGroupData\n\n    return (\n        <div className={\"flex flex-col\"}>\n            <div className={\"flex flex-row justify-between\"}>\n                <button\n                    className={BUTTONS.backButton}\n                    onClick={(e) => props.setHomeDisplay(undefined)}\n                >\n                    Back\n                </button>\n                <div className={\"flex flex-row\"}>\n                    <div>{groupData.title}</div>\n                    <button\n                        className={\n                            \"mx-2 border-black border-2 rounded-full h-6 w-6 flex items-center justify-center\"\n                        }\n                    >\n                        i\n                    </button>\n                </div>\n                {/*gear symbol*/}\n                <button className={\"text-4xl\"}>{ICONS.GEAR}</button>\n            </div>\n            <div className={\"flex flex-row border-2 border-gray-500 m-2 p-2\"}>\n                {/*study projects*/}\n                <div className={\"flex flex-col\"}>\n                    {/*create new study project*/}\n                    <button\n                        className={BUTTONS.acceptButton}\n                        onClick={(e) => {\n                            props.setHomeDisplay(\"createstudyproject\")\n                        }}\n                    >\n                        + Study Project\n                    </button>\n                    {/*list of active study projects*/}\n                    {studyProjects.map((projectData) => {\n                        return (\n                            <button\n                                className={BUTTONS.editButton}\n                                key={projectData.id}\n                                onClick={(e) => {\n                                    props.setHomeDisplay(\"studyproject\")\n                                    props.setHomeStudyProjectDisplay(\n                                        projectData.id\n                                    )\n                                }}\n                            >\n                                <StudyProjectPreview\n                                    projectData={projectData}\n                                />\n                            </button>\n                        )\n                    })}\n                </div>\n                {/*chat messages of the group*/}\n                <div className={\"w-full\"}>\n                    <Chat chatMessages={groupData.chat} />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { BUTTONS, STUDYPROJECTCREATE } from \"../css/classes\"\nimport moment from \"moment\"\nimport { WEEKDAYS } from \"../constants/constants\"\n\nexport default function StudyProjectCreate(props) {\n    let [newStudyProjectData, setNewStudyProjectData] = useState({\n        projectname: \"\",\n        projectdescription: \"\",\n        // Get today's weekday\n        weeklymeetday: moment().weekday(),\n        // Get current time\n        weeklymeetstarttime: Date.now(),\n        weeklymeetendtime: Date.now() + 2 * 60 * 60 * 1000,\n        // as timestamp (integer)\n        deadline: Date.now(),\n    })\n\n    let changeField = (key, value) => {\n        setNewStudyProjectData({ ...newStudyProjectData, [key]: value })\n    }\n\n    let convertTimestampToDate = (timestamp) => {\n        return moment(timestamp).format(`YYYY-MM-DD`)\n    }\n\n    let convertDateToTimestamp = (date) => {\n        // e.g. 2021-01-06, returns timestamp of that day at midnight\n        return moment(date, [\"YYYY-MM-DD\"]).valueOf()\n    }\n\n    let convertTimeToTimestamp = (time) => {\n        // e.g. 15:05, returns timestamp of today with given time\n        return moment(time, [\"HH:mm\"]).valueOf()\n    }\n\n    let convertTimestampToTime = (timestamp) => {\n        // Converts timestamp to HH:mm which is required by <input type=\"time\"/>\n        return moment(timestamp).format(\"HH:mm\")\n    }\n\n    return (\n        <div className={STUDYPROJECTCREATE.background}>\n            <div className={STUDYPROJECTCREATE.titleBar}>\n                Create New Study Project\n            </div>\n            <div className={STUDYPROJECTCREATE.grid}>\n                {/* <div className={STUDYPROJECTCREATE.col}> */}\n                <div className={STUDYPROJECTCREATE.label}>Project Name</div>\n                <input\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.projectname}\n                    onChange={(e) => {\n                        changeField(\"projectname\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>\n                    Project Description\n                </div>\n                <textarea\n                    className={STUDYPROJECTCREATE.textArea}\n                    style={{ minHeight: \"5rem\" }}\n                    placeholder=\"A group project to complete the HCI assignments with 4-5 members.\"\n                    value={newStudyProjectData.projectdescription}\n                    onChange={(e) => {\n                        changeField(\"projectdescription\", e.target.value)\n                    }}\n                />\n                <div className={STUDYPROJECTCREATE.label}>Weekly Meet Day</div>\n                <select\n                    className={STUDYPROJECTCREATE.inputBox}\n                    value={newStudyProjectData.weeklymeetday}\n                    onChange={(e) => {\n                        changeField(\"weeklymeetday\", e.target.value)\n                    }}\n                >\n                    {WEEKDAYS.map((value, index) => {\n                        return (\n                            <option key={value} value={`${index}`}>\n                                {value}\n                            </option>\n                        )\n                    })}\n                </select>\n                <div className={STUDYPROJECTCREATE.label}>\n                    Weekly Meeting Time\n                </div>\n                <div className={\"grid grid-cols-3\"}>\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetstarttime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetstarttime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                    <div className={\"text-center self-center\"}>to</div>\n\n                    <input\n                        className={STUDYPROJECTCREATE.inputBox}\n                        type={\"time\"}\n                        value={convertTimestampToTime(\n                            newStudyProjectData.weeklymeetendtime\n                        )}\n                        onChange={(e) =>\n                            changeField(\n                                \"weeklymeetendtime\",\n                                convertTimeToTimestamp(e.target.value)\n                            )\n                        }\n                    />\n                </div>\n                <div className={STUDYPROJECTCREATE.label}>Deadline</div>\n                <input\n                    type=\"date\"\n                    value={convertTimestampToDate(newStudyProjectData.deadline)}\n                    className={STUDYPROJECTCREATE.inputBox}\n                    onChange={(e) => {\n                        changeField(\n                            \"deadline\",\n                            convertDateToTimestamp(e.target.value)\n                        )\n                    }}\n                />\n            </div>\n            <div className={STUDYPROJECTCREATE.row}>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.createNewStudyProject(\n                            props.groupid,\n                            newStudyProjectData\n                        )\n                    }}\n                >\n                    Create New Study Project\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        props.setHomeDisplay(\"mygroup\")\n                    }}\n                >\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleStudyProjects } from \"../constants/exampledata\"\nimport moment from \"moment\"\n\nexport default function StudyProjectInfo(props) {\n    let projectInfo =\n        props.projectInfo !== undefined\n            ? props.projectInfo\n            : exampleStudyProjects[0]\n\n    let meetDay = moment().weekday(projectInfo.weeklymeetday)\n    let meetStartTime = moment(projectInfo.weeklymeetstarttime).format(\"HH:mm\")\n    let meetEndTime = moment(projectInfo.weeklymeetendtime).format(\"HH:mm\")\n    let meetDayAndTime = `${meetDay} ${meetStartTime} - ${meetEndTime}`\n\n    let deadline = moment(projectInfo.deadline)\n    let deadlineFromNow = deadline.fromNow()\n    let deadlineReadable = deadline.format(\"DD MMM YYYY HH:mm\")\n\n    return (\n        <div className={\"grid grid-cols-2\"}>\n            <div>Project name:</div>\n            <div>{projectInfo.projectname}</div>\n            <div>Project description:</div>\n            <div>{projectInfo.projectdescription}</div>\n            <div>Meeting day:</div>\n            <div>{meetDayAndTime}</div>\n            <div>Deadline:</div>\n            <div>\n                {deadlineReadable} (which is {deadlineFromNow})\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState } from \"react\"\nimport { exampleProfileInfo } from \"../constants/exampledata\"\nimport { BUTTONS, INPUTFIELD } from \"../css/classes\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function ProfileEdit(props) {\n    // TODO get logged in username from props or useContext\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    // Get initial data from props (or if not given: from exampleProfileInfo)\n    let profileInfoData =\n        props.profileInfo !== undefined ? props.profileInfo : exampleProfileInfo\n    let [profileInfoChanged, setProfileInfoChanged] = useState({\n        ...profileInfoData,\n    })\n\n    let storeNewProfileInfoInDatabase = (username, newProfileInfo) => {\n        // TODO Implement database - apply changes to profile of username\n        props.setProfileInfo({ ...newProfileInfo })\n        props.setProfileShowEditScreen(false)\n    }\n\n    let myInput = (myKey, type = \"text\") => {\n        return (\n            <input\n                className={INPUTFIELD.profileEdit}\n                type={type}\n                value={profileInfoChanged[myKey]}\n                onChange={(e) => {\n                    setProfileInfoChanged({\n                        ...profileInfoChanged,\n                        [myKey]: e.target.value,\n                    })\n                }}\n            />\n        )\n    }\n\n    let labelClasses = \"font-bold\"\n\n    return (\n        <div className=\"m-2 p-2 flex flex-col\">\n            <div className=\"flex flex-col\">\n                <img\n                    className={\"m-auto\"}\n                    alt={\"profile pic\"}\n                    src={profileInfoChanged.profilePicLink}\n                />\n                <div className={labelClasses}>Profil Bild:</div>\n                {myInput(\"profilePicLink\", \"text\")}{\" \"}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Name:</div>\n                {myInput(\"name\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Degreecourse:</div>\n                {myInput(\"degreecourse\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Semester:</div>\n                {myInput(\"semester\", \"number\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Connections:</div>\n                {myInput(\"connections\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Moduls:</div>\n                {myInput(\"moduls\")}\n            </div>\n            <div className=\"flex flex-col\">\n                <div className={labelClasses}>Description:</div>\n                {myInput(\"description\")}\n            </div>\n            {/*TODO remaining profile fields*/}\n            <div className=\"m-2 p-2 flex justify-between\">\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        props.setProfileShowEditScreen(false)\n                    }}\n                >\n                    Cancel\n                </button>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        storeNewProfileInfoInDatabase(\n                            contextData.username,\n                            profileInfoChanged\n                        )\n                    }}\n                >\n                    Apply\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { exampleProfileInfo } from \"../constants/exampledata\"\nimport ProfileEdit from \"./ProfileEdit\"\nimport { BUTTONS } from \"../css/classes\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function Profile(props) {\n    // eslint-disable-next-line no-unused-vars\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    let getProfileInfo = (userName) => {\n        // TODO return database profile data entry for username\n        return exampleProfileInfo\n    }\n    let profileInfo = getProfileInfo(contextData.username)\n\n    let removeAccount = (userName) => {\n        if (userName === null) {\n            return\n        }\n        // TODO Implement database - remove account by username: remove from all groups\n    }\n\n    if (!props.profileShowEditScreen) {\n        let mycss = \"m-auto\"\n        let containercss = \"flex flex-col\"\n\n        return (\n            <div>\n                <div className={\"flex flex-row justify-end\"}>\n                    <div className={\"flex flex-col m-2 p-2\"}>\n                        <button\n                            className={BUTTONS.editButton}\n                            onClick={(e) =>\n                                props.setProfileShowEditScreen(true)\n                            }\n                        >\n                            Edit Profile\n                        </button>\n                        <button\n                            className={BUTTONS.declineButton}\n                            onClick={(e) => {\n                                removeAccount(contextData.username)\n                            }}\n                        >\n                            Remove Account\n                        </button>\n                    </div>\n                </div>\n                <img\n                    className={mycss}\n                    src={[profileInfo.profilePicLink]}\n                    alt=\"Profile pic\"\n                />\n                <div className={containercss}>\n                    <div className={mycss}>Name: {profileInfo.name}</div>\n                    <div className={mycss}>\n                        {profileInfo.degreecourse}, {profileInfo.semester}.\n                        Semester\n                    </div>\n                    <div className={mycss}>\n                        Erreichbar unter: {profileInfo.connections}\n                    </div>\n\n                    {/*TODOZeilenumbruch einfügen*/}\n                    <div className={mycss}>\n                        Ich belege dieses Semester folgende Module:{\" \"}\n                        {profileInfo.moduls}\n                    </div>\n                    <div className={mycss}>{profileInfo.description}</div>\n                    <div className={mycss}>{profileInfo.hobbies}</div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <ProfileEdit\n                profileInfo={profileInfo}\n                setProfileShowEditScreen={props.setProfileShowEditScreen}\n            />\n        )\n    }\n}\n","import React, { useState } from \"react\"\nimport { exampleCalendarData } from \"../../../constants/exampledata\"\nimport moment from \"moment\"\nimport { BUTTONS, CALENDAR } from \"../../../css/classes\"\nimport { WEEKDAYSCALENDAR } from \"../../../constants/constants\"\n\nexport default function WeekView(props) {\n    let [weekOffset, setWeekOffset] = useState(0)\n\n    let exampleData = exampleCalendarData\n\n    let weekTitles = [[], [], [], [], [], [], []]\n    let now = new Date()\n    let startOfWeek = new Date(\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDate() - now.getDay() + 1 + 7 * weekOffset\n    )\n    let startOfWeekMoment = moment(startOfWeek)\n    let oneWeek = 7 * 24 * 60 * 60 * 1000\n\n    for (let i = 0; i < exampleData.length; i++) {\n        let meeting = exampleData[i]\n        let meetingMoment = moment(meeting.meetingTime)\n        let meetingTimeThisWeek = moment(\n            `${startOfWeekMoment.format(\"YYYY-MM-DD\")} ${meetingMoment.format(\n                \"HH:mm\"\n            )}`\n        )\n        if (\n            meeting.startdate < meetingTimeThisWeek.valueOf() &&\n            meetingTimeThisWeek.valueOf() < meeting.deadline\n        ) {\n            let displayString = `${meetingTimeThisWeek.format(\"HH:mm\")} ${\n                meeting.title\n            }`\n            let displayHtml = (\n                <div className={meeting.color}>{displayString}</div>\n            )\n            // Inserts a title like the following:\n            // let weekTitles = [[], [], [], [], [], [\"Abgabeblatt\"], []]\n            weekTitles[meeting.meetingDay].push(displayHtml)\n        }\n    }\n\n    // Calculating calendar week, month name, year\n    let startOfYear = new Date(startOfWeek.getFullYear(), 0, 1)\n    let firstMondayOfYear = new Date(\n        startOfYear.getFullYear(),\n        0,\n        ((7 - startOfYear.getDay() + 1) % 7) + 1\n    )\n    let calendarWeek = Math.round(\n        (startOfWeek.getTime() - firstMondayOfYear.getTime()) / oneWeek + 1\n    )\n    // https://stackoverflow.com/a/18648314\n    let monthOfCalendarWeek = startOfWeek.toLocaleString(\"de-DE\", {\n        month: \"long\",\n    })\n    let yearOfCalendarWeek = startOfWeek.getFullYear()\n\n    return (\n        <div>\n            <div className={CALENDAR.titleRow}>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setWeekOffset(weekOffset - 1)\n                    }}\n                >\n                    Vorherige Woche\n                </button>\n                <div className={CALENDAR.title}>\n                    KW {calendarWeek} {monthOfCalendarWeek} {yearOfCalendarWeek}\n                </div>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setWeekOffset(weekOffset + 1)\n                    }}\n                >\n                    Nächste Woche\n                </button>\n            </div>\n\n            <div className={CALENDAR.gridWeekView}>\n                {/*Table header*/}\n                {WEEKDAYSCALENDAR.map((value) => {\n                    return (\n                        <div\n                            key={value}\n                            className={CALENDAR.tableHeaderWeekView}\n                        >\n                            {value}\n                        </div>\n                    )\n                })}\n                {/*TODO read data*/}\n\n                {weekTitles.map((week, index) => {\n                    return (\n                        <div key={`${week.toString()} ${index}`}>\n                            {week.map((htmlElement) => {\n                                return (\n                                    <div key={htmlElement}>\n                                        <div className={CALENDAR.assignment}>\n                                            {htmlElement}\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport moment from \"moment\"\nimport { exampleCalendarData } from \"../../../constants/exampledata\"\nimport { WEEKDAYSCALENDAR } from \"../../../constants/constants\"\nimport { BUTTONS, CALENDAR } from \"../../../css/classes\"\n\nexport default function MonthView(props) {\n    let [monthOffset, setMonthOffset] = useState(0)\n\n    let currentDate = moment().add(monthOffset, \"month\")\n    // Z.B.: January 2021\n    let calendarTitle = currentDate.format(\"MMMM YYYY\")\n    // Z.B.: Erster Tag im Monat\n    let firstOfMonth = currentDate.startOf(\"month\")\n    // Z.B.: 31 for January\n    let amountOfDaysThisMonth = currentDate.daysInMonth()\n\n    // TODO Replace with data from props or database\n    let calendarData = exampleCalendarData\n    // Sort data by meeting time\n    calendarData.sort((a, b) => {\n        if (a.meetingTime > b.meetingTime) {\n            return 1\n        } else if (a.meetingTime < b.meetingTime) {\n            return -1\n        }\n        return 0\n    })\n\n    // Create days array\n    let days = []\n    for (let i = 1; i <= amountOfDaysThisMonth; i++) {\n        days.push(i)\n    }\n\n    // Create start filler elements\n    let amountStartFillerElements = (firstOfMonth.weekday() + 6) % 7\n    let fillerStartElementsHtml = Array(amountStartFillerElements)\n    for (let i = 0; i < amountStartFillerElements; i++) {\n        fillerStartElementsHtml.push(\n            <div key={i} className={CALENDAR.filler} />\n        )\n    }\n\n    // Create end filler elements\n    let amountEndFillerElements =\n        7 - ((amountStartFillerElements + amountOfDaysThisMonth) % 7)\n    let fillerEndElementsHtml = Array(amountEndFillerElements)\n    for (let i = 0; i < amountEndFillerElements; i++) {\n        fillerEndElementsHtml.push(<div key={i} className={CALENDAR.filler} />)\n    }\n\n    // TODO Mobile support (small width)\n\n    let validAssignmentForToday = (assignment, date) => {\n        // Returns assignment if valid, else null\n        let startDate = assignment.startdate\n        let deadline = assignment.deadline\n        // 0-6 as Monday-Sunday\n        let weekday = (moment(date).weekday() + 6) % 7\n        if (\n            startDate < date &&\n            date < deadline &&\n            weekday === assignment.meetingDay\n        ) {\n            return assignment\n        }\n        return null\n    }\n\n    let convertAssignmentToHtml = (assignment) => {\n        if (!assignment) {\n            return\n        }\n        return (\n            <div\n                key={`${assignment.id} ${assignment.title}`}\n                className={`${assignment.color} ${CALENDAR.assignment}`}\n            >\n                {moment(assignment.meetingTime).format(\"HH:mm\")}{\" \"}\n                {assignment.title}\n            </div>\n        )\n    }\n\n    let tableHtml = (\n        <div className={CALENDAR.grid}>\n            {WEEKDAYSCALENDAR.map((day) => {\n                return (\n                    <div className={CALENDAR.tableHeaderMonthView} key={day}>\n                        {day}\n                    </div>\n                )\n            })}\n            {fillerStartElementsHtml}\n            {days.map((day, index) => {\n                let offsetDate = firstOfMonth.clone().add(index, \"day\")\n\n                return (\n                    <div className={CALENDAR.calendarCells} key={day}>\n                        <div>{day}</div>\n                        {/*// TODO Sort assignments by time*/}\n                        {calendarData.map((assignment) => {\n                            return convertAssignmentToHtml(\n                                validAssignmentForToday(assignment, offsetDate),\n                                offsetDate\n                            )\n                        })}\n                    </div>\n                )\n            })}\n            {fillerEndElementsHtml}\n        </div>\n    )\n\n    return (\n        <div>\n            <div className={CALENDAR.titleRow}>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setMonthOffset(monthOffset - 1)\n                    }}\n                >\n                    Vorheriger Monat\n                </button>\n                <div className={CALENDAR.title}>{calendarTitle}</div>\n                <button\n                    className={BUTTONS.calendar}\n                    onClick={(e) => {\n                        setMonthOffset(monthOffset + 1)\n                    }}\n                >\n                    Nächster Monat\n                </button>\n            </div>\n            {tableHtml}\n        </div>\n    )\n}\n","import React from \"react\"\nimport WeekView from \"./WeekView\"\nimport MonthView from \"./MonthView\"\nimport { BUTTONS } from \"../../../css/classes\"\n\nexport default function Calendar(props) {\n    if (props.weekview) {\n        // Week-view\n        return (\n            <div className={\"flex flex-col\"}>\n                <button\n                    className={BUTTONS.calendarSwapButton}\n                    onClick={(e) => {\n                        props.setCalendarWeekView(false)\n                    }}\n                >\n                    Monats-Ansicht\n                </button>\n                <WeekView setCalendarWeekView={props.setCalendarWeekView} />\n            </div>\n        )\n    } else {\n        //Month-View\n        return (\n            <div className={\"flex flex-col\"}>\n                <button\n                    className={BUTTONS.calendarSwapButton}\n                    onClick={(e) => {\n                        props.setCalendarWeekView(true)\n                    }}\n                >\n                    Wochen-Ansicht\n                </button>\n                <MonthView setCalendarWeekView={props.setCalendarWeekView} />\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport moment from \"moment\"\n\nexport default function GroupInfoPreview(props) {\n    let group = props.group\n\n    return (\n        <div key={`${group.icon}${group.title}`} className=\"flex flex-col\">\n            <div className=\"flex flex-row\">\n                <div className={\"border-2 border-black px-1 mx-1\"}>\n                    {group.icon}\n                </div>\n                {group.title} erstellt von {group.createdBy} am{\" \"}\n                {moment(group.createdDate).format(\"DD.MM.YY\")}\n            </div>\n            <div>\n                {group.fieldofstudy}, {group.modules}, {group.memberCount}/\n                {group.memberLimit} Mitglieder\n            </div>\n            <div>{group.members}</div>\n            <div>{group.description}</div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupInfo(props) {\n    // This page is displayed for people who want to know more about the group\n\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex flex-row justify-start\">\n                <button\n                    className={BUTTONS.backButton}\n                    onClick={(e) => props.setGroupSearchViewGroup(undefined)}\n                >\n                    Back\n                </button>\n            </div>\n            <div className=\"flex flex-col m-2 p-2\">\n                <div className=\"self-center font-black\">{groupData.title}</div>\n                <hr />\n                <div className=\"my-2\">\n                    Erstellt von: {groupData.createdBy} am{\" \"}\n                    {groupData.createdDate.toLocaleDateString(\"de-DE\")}\n                </div>\n                <div className=\"my-2\">\n                    {groupData.subjects.join(\", \")}, {groupData.memberCount} /{\" \"}\n                    {groupData.memberLimit} Mitglieder\n                </div>\n                <div className=\"my-8\">{groupData.description}</div>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.setGroupSearchViewGroup(undefined)\n                        props.setGroupSearchRequestJoin(groupData.id)\n                    }}\n                >\n                    Anfrage senden\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { exampleJoinGroupData } from \"../constants/exampledata\"\nimport { BUTTONS } from \"../css/classes\"\n\nexport default function GroupJoinRequest(props) {\n    let groupData =\n        props.groupData !== undefined ? props.groupData : exampleJoinGroupData\n\n    return (\n        <div className=\"flex flex-col m-4 gap-2\">\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"mx-1\">Anfrage an </div>\n                <div className=\"underline mx-1\">{groupData.title}</div>\n            </div>\n            <div className=\"flex flex-row m-2 justify-center\">\n                <div className=\"p-2\">an</div>\n                <div className=\"border border-black border-2 border-rounded rounded py-1 justify px-6 self-center\">\n                    {groupData.createdBy}\n                </div>\n            </div>\n            <textarea\n                className=\"border border-2 border-black h-64 p-2 m-2  rounded\"\n                placeholder=\"Anfrage formulieren (Zeichenbegrenzung: 500)\"\n            />\n            <div className={\"flex flex-row justify-between m-4\"}>\n                <button\n                    className={BUTTONS.acceptButton}\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Senden\n                </button>\n                <button\n                    className={BUTTONS.declineButton}\n                    onClick={(e) => {\n                        props.setGroupSearchRequestJoin(undefined)\n                    }}\n                >\n                    Zurück\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport NavBar from \"./NavBar\"\nimport FilterFunction from \"../FilterFunction\"\nimport GroupInfoJoinedPreview from \"../GroupInfoJoinedPreview\"\nimport GroupCreate from \"../GroupCreate\"\nimport GroupInfoJoined from \"../GroupInfoJoined\"\nimport StudyProjectCreate from \"../StudyProjectCreate\"\nimport StudyProjectInfo from \"../StudyProjectInfo\"\nimport {\n    exampleJoinedGroups,\n    exampleStudyProjects,\n} from \"../../constants/exampledata\"\nimport Profile from \"../Profile\"\nimport Calendar from \"./calendar/Calendar\"\nimport Chat from \"../Chat\"\nimport GroupInfoPreview from \"../GroupInfoPreview\"\nimport {\n    applyGroupFilter,\n    defaultFilter,\n    ICONS,\n} from \"../../constants/constants\"\nimport GroupInfo from \"../GroupInfo\"\nimport GroupJoinRequest from \"../GroupJoinRequest\"\nimport { BUTTONS, SECTIONS } from \"../../css/classes\"\n\nexport default function LoggedIn(props) {\n    // Zustand auf der website: wo man sich befindet\n    // One of: home, groupsearch, chat, calendar, profile\n    let [display, setDisplay] = useState(\"home\")\n    // If in \"home\" category, display the group once the user clicks on it\n    // One of: creategroup, mygroup, createstudyproject, studyproject\n    let [homeDisplay, setHomeDisplay] = useState(undefined)\n    let [homeGroupDisplay, setHomeGroupDisplay] = useState(undefined)\n    // eslint-disable-next-line no-unused-vars\n    let [homeStudyProjectDisplay, setHomeStudyProjectDisplay] = useState(\n        undefined\n    )\n    // Group search screen\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    let [groupSearchViewGroup, setGroupSearchViewGroup] = useState(undefined)\n    let [groupSearchRequestJoin, setGroupSearchRequestJoin] = useState(\n        undefined\n    )\n    // Calendar screen\n    let [calendarWeekView, setCalendarWeekView] = useState(false)\n    // Profile screen\n    let [profileShowEditScreen, setProfileShowEditScreen] = useState(false)\n\n    let navBarClick = (buttonName) => {\n        setDisplay(buttonName)\n        // Reset variables when clicking a button on the navbar\n        setHomeDisplay(undefined)\n        setHomeGroupDisplay(undefined)\n        setHomeStudyProjectDisplay(undefined)\n        setGroupSearchViewGroup(undefined)\n        setGroupSearchRequestJoin(undefined)\n        setProfileShowEditScreen(false)\n    }\n\n    let createNewGroup = (groupData) => {\n        // TODO Add data to database, verify that it doesnt exist etc.\n        console.log(\"Creating new group with data:\", groupData)\n        // Redirect to \"home\" screen\n        // TODO load newly created group\n        navBarClick(\"home\")\n    }\n\n    let createNewStudyProject = (groupid, studyProjectData) => {\n        console.log(\n            `Creating new study proejct for id ${groupid} with study project data`,\n            studyProjectData\n        )\n        setHomeDisplay(\"mygroup\")\n    }\n\n    // Example groups the user is in, assuming the user is \"Alice\"\n    let groups = exampleJoinedGroups\n\n    // Example study projects\n    let studyProjects = exampleStudyProjects\n\n    let subPage = undefined\n    // HOME SCREEN\n    if (display === \"home\") {\n        if (homeDisplay === undefined) {\n            subPage = (\n                <div className={SECTIONS.homeGroupDisplaySection}>\n                    <button\n                        className={BUTTONS.acceptButton}\n                        onClick={(e) => {\n                            setHomeDisplay(\"creategroup\")\n                        }}\n                    >\n                        + neue Gruppe erstellen\n                    </button>\n                    <div className={\"grid grid-cols-1\"}>\n                        {/*TODO get all groups the logged in user is in, and then give the information towards the components via props*/}\n                        {groups.map((group) => {\n                            return (\n                                <button\n                                    key={group.id}\n                                    className={BUTTONS.editButton}\n                                    onClick={(e) => {\n                                        setHomeDisplay(\"mygroup\")\n                                        setHomeGroupDisplay(group.id)\n                                    }}\n                                >\n                                    <GroupInfoJoinedPreview groupinfo={group} />\n                                </button>\n                            )\n                        })}\n                    </div>\n                </div>\n            )\n        } else if (homeDisplay === \"creategroup\") {\n            subPage = (\n                <GroupCreate\n                    setHomeDisplay={setHomeDisplay}\n                    createNewGroup={createNewGroup}\n                />\n            )\n        } else if (homeDisplay === \"mygroup\") {\n            // TODO Load database data, then display the group\n            subPage = (\n                <GroupInfoJoined\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    setHomeStudyProjectDisplay={setHomeStudyProjectDisplay}\n                    studyProjects={studyProjects}\n                />\n            )\n        } else if (homeDisplay === \"createstudyproject\") {\n            // TODO Load database data, then display the group\n            subPage = (\n                <StudyProjectCreate\n                    groupid={homeGroupDisplay}\n                    setHomeDisplay={setHomeDisplay}\n                    createNewStudyProject={createNewStudyProject}\n                />\n            )\n        } else if (homeDisplay === \"studyproject\") {\n            // TODO add project info through props.projectInfo\n            subPage = (\n                <div className={\"flex flex-col\"}>\n                    <div className={\"flex flex-row justify-between\"}>\n                        <button\n                            className={BUTTONS.backButton}\n                            onClick={(e) => {\n                                setHomeDisplay(\"mygroup\")\n                            }}\n                        >\n                            Back\n                        </button>\n\n                        <button className={\"text-4xl\"}>{ICONS.GEAR}</button>\n                    </div>\n                    <StudyProjectInfo />\n                </div>\n            )\n        }\n    }\n    // GROUP SEARCH SCREEN\n    else if (display === \"groupsearch\") {\n        if (\n            groupSearchViewGroup === undefined &&\n            groupSearchRequestJoin === undefined\n        ) {\n            subPage = (\n                <div className=\"flex flex-row\">\n                    <div className=\"flex flex-col\">\n                        <FilterFunction\n                            filterSettings={filterSettings}\n                            setFilterSettings={setFilterSettings}\n                        />\n                    </div>\n                    <div className={\"flex flex-col\"}>\n                        {groups\n                            .filter((group) => {\n                                return applyGroupFilter(group, filterSettings)\n                            })\n                            .map((group) => (\n                                <button\n                                    className={BUTTONS.editButton}\n                                    key={group.id}\n                                    onClick={(e) => {\n                                        setGroupSearchViewGroup(group.id)\n                                    }}\n                                >\n                                    <GroupInfoPreview group={group} />\n                                </button>\n                            ))}\n                    </div>\n                </div>\n            )\n        } else if (groupSearchViewGroup !== undefined) {\n            subPage = (\n                <GroupInfo\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        } else if (groupSearchRequestJoin !== undefined) {\n            subPage = (\n                <GroupJoinRequest\n                    setGroupSearchViewGroup={setGroupSearchViewGroup}\n                    setGroupSearchRequestJoin={setGroupSearchRequestJoin}\n                />\n            )\n        }\n    }\n    // GLOBAL CHAT SCREEN\n    else if (display === \"chat\") {\n        subPage = <Chat />\n    }\n    // CALENDAR SCREEN\n    else if (display === \"calendar\") {\n        subPage = (\n            <Calendar\n                weekview={calendarWeekView}\n                setCalendarWeekView={setCalendarWeekView}\n            />\n        )\n    }\n    // PROFILE SCREEN\n    else if (display === \"profile\") {\n        subPage = (\n            <Profile\n                profileShowEditScreen={profileShowEditScreen}\n                setProfileShowEditScreen={setProfileShowEditScreen}\n            />\n        )\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <NavBar navBarClick={navBarClick} logOutClick={props.logOutClick} />\n            {subPage}\n        </div>\n    )\n}\n","import React from \"react\"\n\nexport default function Title(props) {\n    return <div className=\"text-center m-4 font-black\">Study Finder</div>\n}\n","import React, { useContext, useState } from \"react\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport Title from \"./Title\"\nimport { CONTEXT } from \"../constants/constants\"\n\nexport default function Website(props) {\n    // eslint-disable-next-line\n    let [show, setShow] = useState(\"home\")\n    let { contextData, setContextData } = useContext(CONTEXT)\n\n    let login = (username, password) => {\n        // TODO verify username and password match\n        setContextData({\n            ...contextData,\n            username: username,\n        })\n        setShow(\"home\")\n    }\n\n    let register = (username, email, password) => {\n        // TODO verify that username and email are not in use?\n        // add new user account to database\n        // Dont redirect to the login screen after pressing \"register\" to give the user feedback?\n        // setShow(\"login\")\n    }\n\n    let logOutClick = () => {\n        setContextData({\n            ...contextData,\n            username: null,\n        })\n        setShow(\"login\")\n    }\n\n    // Which subpage to show\n    let subpage = undefined\n    if (show === \"login\") {\n        subpage = <Login setShow={setShow} login={login} />\n    } else if (show === \"register\") {\n        subpage = <Register setShow={setShow} register={register} />\n    } else if (show === \"home\") {\n        subpage = <LoggedIn logOutClick={logOutClick} />\n    }\n    return (\n        <div className=\"flex flex-col\">\n            <Title />\n            {subpage}\n            {/* TODO Footer */}\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function AdminPanel(props) {\n    return (\n        <div className=\"flex flex-col gap-2 m-4\">\n            <Link to=\"/\">Normal study project website</Link>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n            <Link to=\"/mygroups\">Meine Gruppen</Link>\n            <Link to=\"/groupinfojoined\">Eine meiner Gruppen mit Chat</Link>\n            <Link to=\"/groupsearch\">Gruppensuche</Link>\n            <Link to=\"/chat\">Nur Chat</Link>\n            <Link to=\"/createstudygroup\">Study group - Gruppe erstellen</Link>\n            <Link to=\"/createstudyproject\">Study project erstellen</Link>\n            <Link to=\"/studyprojectinfo\">Study project info</Link>\n            <Link to=\"/joingroupinformation\">Gruppe information</Link>\n            <Link to=\"/joingrouprequest\">Gruppe Anfrage senden</Link>\n            <Link to=\"/calendarmonthview\">Kalender - Monatsansicht</Link>\n            <Link to=\"/calendarweekview\">Kalender - Wochenansicht</Link>\n            <Link to=\"/myprofile\">Eigenes Profil</Link>\n            <Link to=\"/profileedit\">Eigenes Profil editieren</Link>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Route, HashRouter } from \"react-router-dom\"\nimport Website from \"./Website\"\nimport Login from \"./loggedout/Login\"\nimport Register from \"./loggedout/Register\"\nimport GroupCreate from \"./GroupCreate\"\nimport StudyProjectCreate from \"./StudyProjectCreate\"\nimport Chat from \"./Chat\"\nimport Calendar from \"./loggedin/calendar/Calendar\"\nimport Profile from \"./Profile\"\nimport AdminPanel from \"./AdminPanel\"\nimport GroupInfo from \"./GroupInfo\"\nimport GroupJoinRequest from \"./GroupJoinRequest\"\nimport ProfileEdit from \"./ProfileEdit\"\nimport \"../css/tailwind.css\"\nimport GroupInfoJoined from \"./GroupInfoJoined\"\nimport LoggedIn from \"./loggedin/LoggedIn\"\nimport StudyProjectInfo from \"./StudyProjectInfo\"\nimport FilterFunction from \"./FilterFunction\"\nimport { exampleJoinedGroups } from \"../constants/exampledata\"\nimport GroupInfoPreview from \"./GroupInfoPreview\"\nimport {\n    applyGroupFilter,\n    CONTEXT,\n    defaultContextData,\n    defaultFilter,\n} from \"../constants/constants\"\n\nexport default function MyRouter(props) {\n    let [filterSettings, setFilterSettings] = useState(defaultFilter)\n    let [contextData, setContextData] = useState({ ...defaultContextData })\n\n    return (\n        <CONTEXT.Provider value={{ contextData, setContextData }}>\n            <HashRouter>\n                {/*This route is the main route of the website*/}\n                <Route exact path=\"/\" component={Website} />\n                {/*The following routes are just developer routes, not available for the user*/}\n                <Route path=\"/admin\" component={AdminPanel} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/mygroups\" component={LoggedIn} />\n                <Route path=\"/groupinfojoined\" component={GroupInfoJoined} />\n                <Route path=\"/groupsearch\">\n                    <div className=\"flex flex-row\">\n                        <div className=\"flex flex-col\">\n                            <FilterFunction\n                                filterSettings={filterSettings}\n                                setFilterSettings={setFilterSettings}\n                            />\n                        </div>\n                        <div>\n                            {exampleJoinedGroups\n                                .filter((group) => {\n                                    return applyGroupFilter(\n                                        group,\n                                        filterSettings\n                                    )\n                                })\n                                .map((group) => (\n                                    <GroupInfoPreview\n                                        key={group.id}\n                                        group={group}\n                                    />\n                                ))}\n                        </div>\n                    </div>\n                </Route>\n                <Route path=\"/chat\" component={Chat} />\n                <Route path=\"/createstudygroup\" component={GroupCreate} />\n                <Route\n                    path=\"/createstudyproject\"\n                    component={StudyProjectCreate}\n                />\n                <Route path=\"/studyprojectinfo\" component={StudyProjectInfo} />\n                <Route path=\"/joingroupinformation\" component={GroupInfo} />\n                <Route path=\"/joingrouprequest\" component={GroupJoinRequest} />\n                <Route path=\"/calendarmonthview\">\n                    <Calendar monthview />\n                </Route>\n                <Route path=\"/calendarweekview\">\n                    <Calendar weekview />\n                </Route>\n                <Route path=\"/myprofile\" component={Profile} />\n                <Route path=\"/profileedit\" component={ProfileEdit} />\n            </HashRouter>\n        </CONTEXT.Provider>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyRouter from \"./components/MyRouter\"\n\nReactDOM.render(<MyRouter />, document.getElementById(\"root\"))\n"],"sourceRoot":""}